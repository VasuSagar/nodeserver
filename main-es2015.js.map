{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/addfinal/addfinal.component.ts","./src/app/components/addfinal/addfinal.component.html","./src/app/components/addmat/addmat.component.ts","./src/app/components/addmat/addmat.component.html","./src/app/components/addprescription/addprescription.component.ts","./src/app/components/addprescription/addprescription.component.html","./src/app/components/blog/blog.component.ts","./src/app/components/blog/blog.component.html","./src/app/components/blog/delblog/delblog.component.ts","./src/app/components/blog/delblog/delblog.component.html","./src/app/components/blog/editblog/editblog.component.ts","./src/app/components/blog/editblog/editblog.component.html","./src/app/components/changemate/changemate.component.ts","./src/app/components/changemate/changemate.component.html","./src/app/components/changeprice/changeprice.component.ts","./src/app/components/changeprice/changeprice.component.html","./src/app/components/checkoutprescription/checkoutprescription.component.ts","./src/app/components/checkoutprescription/checkoutprescription.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/disease/disease.component.ts","./src/app/components/disease/disease.component.html","./src/app/components/drug/drug.component.ts","./src/app/components/drug/drug.component.html","./src/app/components/encyclo/encyclo.component.ts","./src/app/components/encyclo/encyclo.component.html","./src/app/components/graph/graph.component.ts","./src/app/components/graph/graph.component.html","./src/app/components/graph2/graph2.component.ts","./src/app/components/graph2/graph2.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/loginchemist/loginchemist.component.ts","./src/app/components/loginchemist/loginchemist.component.html","./src/app/components/logindoctor/logindoctor.component.ts","./src/app/components/logindoctor/logindoctor.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/pdf/pdf.component.ts","./src/app/components/pdf/pdf.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/publicprof/publicprof.component.ts","./src/app/components/publicprof/publicprof.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/registerchemist/registerchemist.component.ts","./src/app/components/registerchemist/registerchemist.component.html","./src/app/components/registerdoctor/registerdoctor.component.ts","./src/app/components/registerdoctor/registerdoctor.component.html","./src/app/components/viewfull/viewfull.component.ts","./src/app/components/viewfull/viewfull.component.html","./src/app/components/viewpreforpatient/viewpreforpatient.component.ts","./src/app/components/viewpreforpatient/viewpreforpatient.component.html","./src/app/components/viewprescription/viewprescription.component.ts","./src/app/components/viewprescription/viewprescription.component.html","./src/app/dialog/add/add.component.ts","./src/app/dialog/add/add.component.html","./src/app/dialog/delete/delete.component.ts","./src/app/dialog/delete/delete.component.html","./src/app/dialog/edit/edit.component.ts","./src/app/dialog/edit/edit.component.html","./src/app/guard/auth.guard.ts","./src/app/guard/authchemist.gard.ts","./src/app/guard/authdoctor.guard.ts","./src/app/services/auth.service.ts","./src/app/services/blogservice.service.ts","./src/app/services/emp.service.ts","./src/app/services/glob.ts","./src/app/services/transfer.service.ts","./src/app/services/validate.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FirstApp';\n  constructor(private toastr: ToastrService) { }\n}\n","<app-navbar></app-navbar>\r\n\r\n<div class=\"container\">\r\n    <flash-messages></flash-messages>\r\n    <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport{RouterModule,Routes} from '@angular/router';\nimport {FormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RegisterComponent } from './components/register/register.component';\n\n\nimport {ValidateService} from './services/validate.service';\nimport {AuthService} from './services/auth.service';\nimport {FlashMessagesModule} from 'angular2-flash-messages';\nimport {AuthGuard} from './guard/auth.guard';\nimport {AuthGuardChemist} from './guard/authchemist.gard'; //guard for chemist\n\nimport { LogindoctorComponent } from './components/logindoctor/logindoctor.component';\nimport { LoginchemistComponent } from './components/loginchemist/loginchemist.component';\nimport { RegisterdoctorComponent } from './components/registerdoctor/registerdoctor.component';\nimport { RegisterchemistComponent } from './components/registerchemist/registerchemist.component';\nimport { AddprescriptionComponent } from './components/addprescription/addprescription.component';\n\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ViewprescriptionComponent } from './components/viewprescription/viewprescription.component';\nimport { CheckoutprescriptionComponent } from './components/checkoutprescription/checkoutprescription.component';\nimport { PdfComponent } from './components/pdf/pdf.component';\nimport { AuthGuardDoctor } from './guard/authdoctor.guard';\nimport { EncycloComponent } from './components/encyclo/encyclo.component';\nimport { DrugComponent } from './components/drug/drug.component';\nimport { DiseaseComponent } from './components/disease/disease.component';\nimport { ChangepriceComponent } from './components/changeprice/changeprice.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; //guard for doctor\n\nimport { MatTableModule } from '@angular/material/table';\nimport { ChangemateComponent } from './components/changemate/changemate.component';\nimport {MatSortModule} from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule} from '@angular/material/dialog';\n\n//autoinput\nimport{MatAutocompleteModule} from '@angular/material/autocomplete';\nimport{MatFormFieldModule} from '@angular/material/form-field';\nimport{MatInputModule} from '@angular/material/input';\nimport { EmpService } from './services/emp.service';\nimport{MatIconModule} from '@angular/material/icon';\nimport { EditComponent } from './dialog/edit/edit.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AddComponent } from './dialog/add/add.component';\nimport { DeleteComponent } from './dialog/delete/delete.component';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { EditblogComponent } from './components/blog/editblog/editblog.component';\nimport { DelblogComponent } from './components/blog/delblog/delblog.component';\nimport { PublicprofComponent } from './components/publicprof/publicprof.component';\nimport { ViewpreforpatientComponent } from './components/viewpreforpatient/viewpreforpatient.component';\nimport {Globals} from './services/glob';\nimport { AddmatComponent } from './components/addmat/addmat.component';\nimport { AddfinalComponent } from './components/addfinal/addfinal.component';\nimport { GraphComponent } from './components/graph/graph.component';\nimport { HighchartsChartModule } from 'highcharts-angular';\nimport { Graph2Component } from './components/graph2/graph2.component';\nimport { ViewfullComponent } from './components/viewfull/viewfull.component';\nconst appRoutes:Routes=[\n  {path:\"\",component:HomeComponent},\n  {path:\"register\",component:RegisterComponent},\n  {path:\"registerchemist\",component:RegisterchemistComponent},\n  {path:\"registerdoctor\",component:RegisterdoctorComponent},\n  {path:\"login\",component:LoginComponent},\n  {path:\"logindoctor\",component:LogindoctorComponent},//login for doctor\n  {path:\"loginchemist\",component:LoginchemistComponent},  //login for chemist\n  {path:\"dashboard\",component:DashboardComponent,canActivate:[AuthGuardDoctor]},\n  //{path:\"profile\",component:ProfileComponent,canActivate:[AuthGuard]},\n  //{path:\"profile\",component:ProfileComponent,canActivate:[AuthGuardChemist]},\n  {path:\"profile\",component:ProfileComponent,canActivate:[AuthGuardDoctor]},\n  {path:\"addprescription\",component:AddprescriptionComponent,canActivate:[AuthGuardChemist]},\n  {path:\"checkoutprescription\",component:CheckoutprescriptionComponent,canActivate:[AuthGuardChemist]},\n  {path:\"viewprescription\",component:ViewprescriptionComponent,canActivate:[AuthGuardChemist]},\n  {path:\"pdfcomponent\",component:PdfComponent,canActivate:[AuthGuardChemist]},\n  {path:\"encyclo\",component:EncycloComponent,canActivate:[AuthGuardDoctor]},\n  {path:\"drug\",component:DrugComponent,canActivate:[AuthGuardDoctor]},\n  {path:\"disease\",component:DiseaseComponent,canActivate:[AuthGuardDoctor]},\n  {path:\"changeprice\",component:ChangepriceComponent,canActivate:[AuthGuardChemist]},\n  {path:\"changemate\",component:ChangemateComponent,canActivate:[AuthGuardChemist]},\n  {path:\"blog\",component:BlogComponent,canActivate:[AuthGuardDoctor]},\n  {path:\"edit-blog/:id\",component:EditblogComponent,canActivate:[AuthGuardDoctor]},\n  {path:\"delete-blog/:id\",component:DelblogComponent,canActivate:[AuthGuardDoctor]},\n  {path:\"user/:username\",component:PublicprofComponent,canActivate:[AuthGuardDoctor]},\n  {path:\"viewprescriptionpat\",component:ViewpreforpatientComponent,canActivate:[AuthGuard]},\n  {path:\"addprescriptionmat\",component:AddmatComponent,canActivate:[AuthGuardDoctor]},\n  {path:\"addfinal\",component:AddfinalComponent,canActivate:[AuthGuardChemist]},\n  {path:\"graph\",component:GraphComponent,canActivate:[AuthGuardChemist]},\n  {path:\"viewfull\",component:ViewfullComponent,canActivate:[AuthGuard]}\n\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    HomeComponent,\n    \n    DashboardComponent,\n    ProfileComponent,\n    RegisterComponent,\n    LogindoctorComponent,\n    LoginchemistComponent,\n    RegisterdoctorComponent,\n    RegisterchemistComponent,\n    AddprescriptionComponent,\n    ViewprescriptionComponent,\n    CheckoutprescriptionComponent,\n    PdfComponent,\n    EncycloComponent,\n    DrugComponent,\n    DiseaseComponent,\n    ChangepriceComponent,\n    ChangemateComponent,\n    EditComponent,\n    AddComponent,\n    DeleteComponent,\n    BlogComponent,\n    EditblogComponent,\n    DelblogComponent,\n    PublicprofComponent,\n    ViewpreforpatientComponent,\n    AddmatComponent,\n    AddfinalComponent,\n    GraphComponent,\n    Graph2Component,\n    ViewfullComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot(),\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatDialogModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),\n    HighchartsChartModule\n\n\n  ],\n  providers: [ValidateService,AuthService,AuthGuard,AuthGuardChemist,AuthGuardDoctor,EmpService,Globals],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nimport { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {startWith, map, find} from 'rxjs/operators';\nimport {FormControl} from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { DiseaseComponent } from '../disease/disease.component';\nimport { DataSource } from '@angular/cdk/collections';\n@Component({\n  selector: 'app-addfinal',\n  templateUrl: './addfinal.component.html',\n  styleUrls: ['./addfinal.component.css']\n})\nexport class AddfinalComponent implements OnInit {\n  myControl = new FormControl();\n  myControl2 = new FormControl();\n\n  //options: string[] = ['One', 'Two', 'Three'];\n  options: string[];\n  //options2: string[] = ['1', '2', '3','11','22','33'];\n  options2:string[];\n  obj:Disease;\n  filteredOptions: Observable<string[]>;\n  filteredOptions2: Observable<string[]>;\n  \n  varr;\n  varr1;\n  //below is tmep\n  displayedColumns: string[] = ['medname', 'breakfast','lunch'];\n\n  constructor(private _formBuilder: FormBuilder, private authService:AuthService) { }\n\n  ngOnInit(): void {\n\n\n   this.authService.getDoctordisname().subscribe(disease=>{\n     \n     \n      this.options=disease;\n      this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n\n  });\n\n  this.authService.getDoctordisid().subscribe(did=>{\n    this.obj=did;\n    console.log(this.obj);\n  });\n\n\n   \n    \n    \n  }\n\n\n \n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n  private _filter2(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options2.filter(option2 => option2.toLowerCase().includes(filterValue));\n  }\n\n \n\n\n  submit()\n  {\n    //console.log(this.options[i]);\n   // console.log(\"hi\");\n    console.log(JSON.stringify(this.varr));\n    console.log(JSON.stringify(this.varr1));\n   //console.log(form.value);\n  }\n\n\n  oncg(op)\n  {var x;\n   //console.log(op); //here we got the name of disease.Now we will find it's id from obj\n   //console.log(\"ID IS\"+this.finddiseaseid(op));\n    const obj={did:this.finddiseaseid(op)};\n    \n    this.authService.getDoctormed(obj).subscribe(prescription=>{\n     this.options2=prescription;\n     this.filteredOptions2 = this.myControl2.valueChanges\n     .pipe(\n       startWith(''),\n       map(value => this._filter2(value))\n     );\n      \n      \n    });\n    \n  }\n\n  finddiseaseid(dname){        //this function will find disease's id\n    var x;\n    for(x in this.obj){\n      if(this.obj[x].dname==dname)\n        return this.obj[x].did; \n    }\n  }\n\n  addNew()\n  {\n\n  }\n  \n\n\n\n}\ninterface Disease{\n  dname:string,\n\n  did:string\n  \n  }\n\n\n","<form class=\"example-form\" (ngSubmit)=\"submit()\">\n \n    <mat-form-field class=\"example-full-width\">\n      <input type=\"text\"\n             placeholder=\"Select Disease\"\n             aria-label=\"Number\"\n             matInput\n             [formControl]=\"myControl\"\n             [matAutocomplete]=\"auto\"\n             [(ngModel)]=\"varr\" name=\"varr\" id=\"varr\" >\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\" (click)=\"oncg(option)\" >\n          {{option}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n      <br><br><br><br> <br><br><br><br> <br><br><br><br> <br><br><br><br>\n  \n      <mat-form-field class=\"example-full-width\">\n    <input type=\"text\"\n             placeholder=\"Select Medicines\"\n             aria-label=\"Numberr\"\n             matInput\n             [formControl]=\"myControl2\"\n             [matAutocomplete]=\"autotest\"\n             [(ngModel)]=\"varr1\" name=\"varr1\" id=\"varr1\"\n             >\n      <mat-autocomplete #autotest=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option1 of filteredOptions2 | async\" [value]=\"option1\" >\n          {{option1}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  \n    <input type=\"submit\" value=\"Register\">\n  \n  \n  </form>\n  \n  <!--\n  <div *ngFor=\"let name of options2\">\n    {{name}}\n  </div>\n  -->\n  \n  <br><br><br><br>\n  \n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {startWith, map, find} from 'rxjs/operators';\nimport {FormControl} from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { DiseaseComponent } from '../disease/disease.component';\nimport { DataSource } from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n const ELEMENT_DATA: Prescription[] = [\n   //{medname: 'botyle', breakfast :\"1\",lunch:\"0\"},\n\n ];\n@Component({\n  selector: 'app-addmat',\n  templateUrl: './addmat.component.html',\n  styleUrls: ['./addmat.component.css']\n})\nexport class AddmatComponent implements OnInit {\n  username:any;\n  //here to\n\n  presc : Prescription = {\n    medname :\"\",\n    breakfast :\"\",\n    lunch :\"\",\n    quantity:0\n  };\n\n  //here temp\n\n\n\n  myControl = new FormControl();\n  myControl2 = new FormControl();\n\n  //options: string[] = ['One', 'Two', 'Three'];\n  options: string[];\n  //options2: string[] = ['1', '2', '3','11','22','33'];\n  options2:string[];\n  obj:Disease;\n  filteredOptions: Observable<string[]>;\n  filteredOptions2: Observable<string[]>;\n  \n  varr;\n  varr1;\n  //below is tmep\n  displayedColumns: string[] = ['medname', 'breakfast','lunch','quantity'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n  \n\n  constructor(private _formBuilder: FormBuilder, private authService:AuthService,\n    private router:Router,\n    private flashMessage:FlashMessagesService) { }\n\n  ngOnInit(): void {\n\n\n   this.authService.getDoctordisname().subscribe(disease=>{\n     \n     \n      this.options=disease;\n      this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n\n     \n      \n\n  });\n  this.authService.getDoctordAllmed().subscribe(prescription=>{\n    this.options2=prescription;\n    this.filteredOptions2 = this.myControl2.valueChanges\n    .pipe(\n      startWith(''),\n      map(value => this._filter2(value))\n    );\n     \n     \n   });\n\n  this.authService.getDoctordisid().subscribe(did=>{\n    this.obj=did;\n    console.log(this.obj);\n  });\n\n\n\n    \n    \n  }\n\n\n \n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n  private _filter2(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options2.filter(option2 => option2.toLowerCase().includes(filterValue));\n  }\n\n \n\n\n  submit()\n  {\n    //console.log(this.options[i]);\n   // console.log(\"hi\");\n    console.log(JSON.stringify(this.varr));\n    console.log(JSON.stringify(this.varr1));\n   //console.log(form.value);\n  }\n\n\n  oncg(op)\n  {var x;\n   //console.log(op); //here we got the name of disease.Now we will find it's id from obj\n   //console.log(\"ID IS\"+this.finddiseaseid(op));\n    const obj={did:this.finddiseaseid(op)};\n    \n    this.authService.getDoctormed(obj).subscribe(prescription=>{\n     this.options2=prescription;\n     this.filteredOptions2 = this.myControl2.valueChanges\n     .pipe(\n       startWith(''),\n       map(value => this._filter2(value))\n     );\n      \n      \n    });\n    \n  }\n\n  finddiseaseid(dname){        //this function will find disease's id\n    var x;\n    for(x in this.obj){\n      if(this.obj[x].dname==dname)\n        return this.obj[x].did; \n    }\n  }\n\n  addNew()\n  {\n    ELEMENT_DATA.push(this.presc)\n    \n    this.dataSource = new MatTableDataSource(ELEMENT_DATA);\n    this.presc = {\n      medname :\"\",\n      breakfast :\"\",\n      lunch :\"\",\n      quantity:0\n   };\n   \n\n  }\n  generateOTP() { \n          \n    // Declare a digits variable  \n    // which stores all digits \n    var digits = '0123456789'; \n    let OTP = ''; \n    for (let i = 0; i < 6; i++ ) { \n        OTP += digits[Math.floor(Math.random() * 10)]; \n    } \n    return OTP;\n} \n\n\nsubmitPrescription()\n      {\n        var x;\n        const presc={\n                \n        medname:[],\n        breakfast:[],\n          lunch:[],\n          quantity:[],\n          username:this.username,\n          otp:this.generateOTP()\n      }\n\n      for(x in ELEMENT_DATA){\n        presc.medname[x]=ELEMENT_DATA[x].medname;\n        presc.breakfast[x]=ELEMENT_DATA[x].breakfast;\n        presc.lunch[x]=ELEMENT_DATA[x].lunch;\n        presc.quantity[x]=Number(ELEMENT_DATA[x].quantity);\n      \n      }\n\n  this.authService.addPrescription2(presc).subscribe(data=>{\n    if(data.success){\n        \n\n\n         //after inserting prescription to database\n         this.flashMessage.show(\"Prescription successfully submitted\",{cssClass:'alert-success',timeout:5000});\n         this.router.navigate(['dashboard']);\n     \n    }\n    else{\n      this.flashMessage.show(\"Invalid Username\",{cssClass:'alert-danger',timeout:5000});\n     \n\n    }\n  });\n}\n\n\n\n}\ninterface Disease{\n  dname:string,\n\n  did:string\n  \n  }\n\n  interface Prescription{\n    medname:string,\n    breakfast:string,\n    lunch:string,\n    quantity:number\n    \n    }\n\n\n","Patient Username:<input class=\"form-control\" type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" />\n<br><br>\n \n  <mat-form-field class=\"example-full-width\">\n    <input type=\"text\"\n           placeholder=\"Select Disease\"\n           aria-label=\"Number\"\n           matInput\n           [formControl]=\"myControl\"\n           [matAutocomplete]=\"auto\"\n           [(ngModel)]=\"varr\" name=\"varr\" id=\"varr\" >\n    <mat-autocomplete #auto=\"matAutocomplete\">\n      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\" (click)=\"oncg(option)\" >\n        {{option}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n    <br><br><br>\n\n    <!-- <mat-form-field class=\"example-full-width\">\n  <input type=\"text\"\n           placeholder=\"Select Medicines\"\n           aria-label=\"Numberr\"\n           matInput\n           [formControl]=\"myControl2\"\n           [matAutocomplete]=\"autotest\"\n           [(ngModel)]=\"varr1\" name=\"varr1\" id=\"varr1\"\n           >\n    <mat-autocomplete #autotest=\"matAutocomplete\">\n      <mat-option *ngFor=\"let option1 of filteredOptions2 | async\" [value]=\"option1\" >\n        {{option1}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n\n  <input type=\"submit\" value=\"Register\"> -->\n\n  <!-- <mat-form-field >\n    <input matInput placeholder=\"Medicine Name\" [(ngModel)]=\"presc.medname\">\n  </mat-form-field>&nbsp; -->\n\n  <mat-form-field class=\"example-full-width\">\n    <input type=\"text\"\n             placeholder=\"Select Medicines\"\n             aria-label=\"Numberr\"\n             matInput\n             [formControl]=\"myControl2\"\n             [matAutocomplete]=\"autotest\"\n             [(ngModel)]=\"presc.medname\" name=\"presc.medname\" id=\"presc.medname\"\n             >\n      <mat-autocomplete #autotest=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option1 of filteredOptions2 | async\" [value]=\"option1\" >\n          {{option1}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n\n\n\n  <mat-form-field>\n    <input matInput placeholder=\"Breakfast\" [(ngModel)]=\"presc.breakfast\">\n  </mat-form-field>&nbsp;\n  <mat-form-field>\n    <input matInput placeholder=\"Lunch\" [(ngModel)]=\"presc.lunch\">\n  </mat-form-field>&nbsp;\n  <mat-form-field>\n    <input matInput placeholder=\"Quantity\" [(ngModel)]=\"presc.quantity\">\n  </mat-form-field>&nbsp;\n  <br>\n  <button mat-raised-button color=\"primary\" (click)=\"addNew()\">Save</button>\n  <br><br>\n  <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"medname\">\n      <th mat-header-cell mat-sort-header *matHeaderCellDef> Medicine name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.medname}} </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"breakfast\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Breakfast </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.breakfast}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"lunch\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Lunch </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.lunch}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"quantity\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.quantity}} </td>\n      </ng-container>\n\n\n \n    \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>  \n\n\n  <button class=\"btn btn-default\" type=\"button\" (click)=\"submitPrescription()\">Submit Prescription</button>","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport { AuthService } from 'src/app/services/auth.service';\n@Component({\n  selector: 'app-addprescription',\n  templateUrl: './addprescription.component.html',\n  styleUrls: ['./addprescription.component.css']\n})\nexport class AddprescriptionComponent implements OnInit {\n  public fieldArray: Array<any> = [];\n  public newAttribute: any = {};\n  username:any;\n  disease:any;\n\n  //another\n  selectedDisease = 0;\nselectedMedicine = 0;\n\nmedicines = [];\n\n\n  //for prescirption\n  medname:Array<number>;\n  breakfast:Array<string>;\n  lunch:Array<string>;\n\n\n      \n  constructor(private router:Router,\n    private authService:AuthService,\n    private flashMessage:FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n  \n  addFieldValue() {\n    this.fieldArray.push(this.newAttribute)\n    this.newAttribute = {};\n    \n\n\n}\n\ndeleteFieldValue(index) {\n    this.fieldArray.splice(index, 1);\n    console.log(this.fieldArray);       //to get breakfast of first row we will typ=>>>> this.fieldArray[0].breakfast\n}\n\n\n\n//another\nonSelectDisease(disease_id: number) {\n    this.selectedDisease = disease_id;\n    this.selectedMedicine = 0;\n    \n    this.medicines = this.getMedicines().filter((item) => {\n    return item.disease_id === Number(disease_id)\n    });\n    }\n\n\n    \n       \n      getDiseases() {\n      return [\n      { id: 1, name: 'Maleriya' },\n      { id: 2, name: 'Fever' },\n      { id: 3, name: 'Typhoid' }\n      ];\n      }\n       \n      getMedicines() {\n      return [\n      { id: 1, disease_id: 1, name: 'Botyle' },\n      { id: 2, disease_id: 1, name: 'Isofenyle' },\n      { id: 3, disease_id: 1, name: 'Propyle' },\n      { id: 4, disease_id: 2, name: 'Crocine' },\n      { id: 5, disease_id: 2, name: 'Dispereine' },\n      { id: 6, disease_id: 3, name: 'Penicilin' },\n      ]\n      }\n\n\n      submitPrescription(){\n        var x;\n      \n\n\n\n\n\n\n\n\n\n\n\n        const presc={\n          \n          medname:[],\n           breakfast:[],\n             lunch:[],\n            username:this.username,\n            otp:this.generateOTP()\n        }\n\n        for(x in this.fieldArray){\n            presc.medname[x]=this.fieldArray[x].medicine;\n            presc.breakfast[x]=this.fieldArray[x].breakfast;\n            presc.lunch[x]=this.fieldArray[x].lunch;\n          \n          }\n\n          //send otp to registered email of user\n          \n      \n\n            \n\n          this.authService.addPrescription(presc).subscribe(data=>{\n            if(data.success){\n                \n\n\n                //after inserting prescription to database\n              this.flashMessage.show(\"Prescription successfully submitted\",{cssClass:'alert-success',timeout:5000});\n              this.router.navigate(['dashboard']);\n            }\n            else{\n              this.flashMessage.show(\"Invalid Username\",{cssClass:'alert-danger',timeout:5000});\n              this.router.navigate(['addprescription']);\n    \n            }\n          });\n \n\n        \n\n       \n\n\n      }\n\n      generateOTP() { \n          \n        // Declare a digits variable  \n        // which stores all digits \n        var digits = '0123456789'; \n        let OTP = ''; \n        for (let i = 0; i < 6; i++ ) { \n            OTP += digits[Math.floor(Math.random() * 10)]; \n        } \n        return OTP;\n    } \n      \n\n\n\n}\n","Patient Username:<input class=\"form-control\" type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" />\n<br><br>\n<div class=\"form-control\">\n  \n    <select *ngIf=\"getDiseases()\" [(ngModel)]=\"selectedDisease\" (change)=\"onSelectDisease($event.target.value)\" class=\"form-control\" id=\"disease\">\n    <option value=\"0\">Select Disease</option>\n    <option *ngFor=\"let disease of getDiseases()\" value= {{disease.id}}>{{disease.name}}</option>\n    </select>\n    </div>\n<br><br>\n\n<table class=\"table table-striped table-bordered\">\n    <thead>\n        <tr>\n            <th>Medicine</th>\n            <th>Breakfast</th>\n            <th>Lunch</th>\n\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let field of fieldArray; let i = index\">\n            <td>\n\t\t\t\t\n\t\t\t<select *ngIf=\"medicines\" [(ngModel)]=\"field.medicine\" class=\"form-control\" name=\"{{field.medicine}}\">\n\t\t\t\t<option value=\"0\">Select Medicine</option>\n    \t\t\t\t<option *ngFor=\"let medicine of medicines\" value= {{medicine.name}}>{{medicine.name}}</option>\n\t\t\t</select>\n\n\n            </td>\n            <td>\n                <input [(ngModel)]=\"field.breakfast\" class=\"form-control\" type=\"text\" name=\"{{field.breakfast}}\" />\n            </td>\n            <td>\n                <input [(ngModel)]=\"field.lunch\" class=\"form-control\" type=\"text\" name=\"{{field.lunch}}\" />\n            </td>\n            <td>\n                <button class=\"btn btn-default\"  type=\"button\" (click)=\"deleteFieldValue(i)\">Delete</button>\n            </td>\n        </tr>\n        <tr>\n            <td>\n               \n\t\t\t\n\t\t\t\t<select *ngIf=\"medicines\" [(ngModel)]=\"newAttribute.medicine\" class=\"form-control\" id=\"newAttributeMedicine\" name=\"newAttributeMedicne\">\n\t\t\t\t\t<option value=\"0\">Select Medicine</option>\n    \t\t\t\t<option *ngFor=\"let medicine of medicines\" value= {{medicine.name}}>{{medicine.name}}</option>\n\t\t\t\t</select>\n\t\t\t</td>\n            <td>\n                <input class=\"form-control\" type=\"text\" id=\"newAttributeBreakfast\" [(ngModel)]=\"newAttribute.breakfast\" name=\"newAttributeBreakfast\" />\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" id=\"newAttributeLunch\" [(ngModel)]=\"newAttribute.lunch\" name=\"newAttributeLunch\" />\n            </td>\n            <td>\n                <button class=\"btn btn-default\" type=\"button\" (click)=\"addFieldValue()\">Add</button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<button class=\"btn btn-default\" type=\"button\" (click)=\"submitPrescription()\">Submit Prescription</button>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport { BlogserviceService } from '../../services/blogservice.service';\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n  messageClass;\n  message;\n  newPost = false;\n  loadingBlogs = false;\n  form;\n  processing = false;\n  username;\n  blogPosts;\n  uid;\n  newComment = [];\n  enabledComments = [];\n  commentForm;\n  constructor(private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private blogService: BlogserviceService) {\n      this.createNewBlogForm();\n      this.createCommentForm(); // Create form for posting comments on a user's blog post\n     }\n     createNewBlogForm() {\n      this.form = this.formBuilder.group({\n        title: ['', Validators.compose([\n          Validators.required,\n          Validators.maxLength(50),\n          Validators.minLength(5),\n          this.alphaNumericValidation\n        ])],\n        body: ['', Validators.compose([\n          Validators.required,\n          Validators.maxLength(500),\n          Validators.minLength(5)\n        ])]\n      })\n    }\n\n\n     // Create form for posting comments\n  createCommentForm() {\n    this.commentForm = this.formBuilder.group({\n      comment: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(200)\n      ])]\n    })\n  }\n\n  // Enable the comment form\n  enableCommentForm() {\n    this.commentForm.get('comment').enable(); // Enable comment field\n  }\n\n  // Disable the comment form\n  disableCommentForm() {\n    this.commentForm.get('comment').disable(); // Disable comment field\n  }\n\n\n\n      // Enable new blog form\n  enableFormNewBlogForm() {\n    this.form.get('title').enable(); // Enable title field\n    this.form.get('body').enable(); // Enable body field\n  }\n\n  // Disable new blog form\n  disableFormNewBlogForm() {\n    this.form.get('title').disable(); // Disable title field\n    this.form.get('body').disable(); // Disable body field\n  }\n\n  // Validation for title\n  alphaNumericValidation(controls) {\n    const regExp = new RegExp(/^[a-zA-Z0-9 ]+$/); // Regular expression to perform test\n    // Check if test returns false or true\n    if (regExp.test(controls.value)) {\n      return null; // Return valid\n    } else {\n      return { 'alphaNumericValidation': true } // Return error in validation\n    }\n  }\n\n  // Function to display new blog form\n  newBlogForm() {\n    this.newPost = true; // Show new blog form\n  }\n\n  // Reload blogs on current page\n  reloadBlogs() {\n    this.loadingBlogs = true; // Used to lock button\n    this.getAllBlogs();\n    // Get All Blogs\n    setTimeout(() => {\n      this.loadingBlogs = false; // Release button lock after four seconds\n    }, 4000);\n  }\n\n   // Function to post a new comment on blog post\n   draftComment(id) {\n    this.commentForm.reset(); // Reset the comment form each time users starts a new comment\n    this.newComment = []; // Clear array so only one post can be commented on at a time\n    this.newComment.push(id); // Add the post that is being commented on to the array\n  }\n\n  // Function to cancel new post transaction\n  cancelSubmission(id) {\n    const index = this.newComment.indexOf(id); // Check the index of the blog post in the array\n    this.newComment.splice(index, 1); // Remove the id from the array to cancel post submission\n    this.commentForm.reset(); // Reset  the form after cancellation\n    this.enableCommentForm(); // Enable the form after cancellation\n    this.processing = false; // Enable any buttons that were locked\n  }\n  onBlogSubmit() {\n    this.processing = true; // Disable submit button\n    this.disableFormNewBlogForm(); // Lock form\n\n    // Create blog object from form fields\n    const blog = {\n      title: this.form.get('title').value, // Title field\n      body: this.form.get('body').value, // Body field\n      createdBy: this.username // CreatedBy field\n    }\n\n    // Function to save blog into database\n    this.blogService.newBlog(blog).subscribe(data => {\n      // Check if blog was saved to database or not\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Return error class\n        this.message = data.message; // Return error message\n        this.processing = false; // Enable submit button\n        this.enableFormNewBlogForm(); // Enable form\n      } else {\n        this.messageClass = 'alert alert-success'; // Return success class\n        this.message = data.message; // Return success message\n        this.getAllBlogs();\n        // Clear form data after two seconds\n        setTimeout(() => {\n          this.newPost = false; // Hide form\n          this.processing = false; // Enable submit button\n          this.message = false; // Erase error/success message\n          this.form.reset(); // Reset all form fields\n          this.enableFormNewBlogForm(); // Enable the form fields\n        }, 2000);\n      }\n    });\n  }\n\n  // Function to go back to previous page\n  goBack() {\n    window.location.reload(); // Clear all variable states\n  }\n  ngOnInit(): void {\n      // Get profile username on page load\n     \n      this.authService.getProfileDoctor().subscribe(profile => {\n       \n        this.username = profile.user.username;// Used when creating new blog posts and comments\n        this.uid=profile.user._id;\n      });\n      this.getAllBlogs();\n\n      \n  }\n\n  // Function to get all blogs from the database\n  getAllBlogs() {\n    \n    this.blogService.getAllBlogs().subscribe(data => {\n      this.blogPosts = data.blogs; // Assign array to use in HTML\n    });\n  }\n\n  // Function to like a blog post\n  likeBlog(id) {\n   \n    const data={id:id,username:this.username,uid:this.uid};\n    this.blogService.likeBlog(data).subscribe(data => {\n      this.getAllBlogs(); // Refresh blogs after like\n    });\n  }\n\n// Function to disliked a blog post\n  dislikeBlog(id) {\n  \n    const data={id:id,username:this.username,uid:this.uid};\n    this.blogService.dislikeBlog(data).subscribe(data => {\n      this.getAllBlogs(); // Refresh blogs after dislike\n    });\n  }\n\n  // Function to post a new comment\n  postComment(id) {\n    this.disableCommentForm(); // Disable form while saving comment to database\n    this.processing = true; // Lock buttons while saving comment to database\n    const comment = this.commentForm.get('comment').value; // Get the comment value to pass to service function\n    // Function to save the comment to the database\n    const data={id:id,comment:comment,uid:this.uid};\n    this.blogService.postComment(data).subscribe(data => {\n      console.log(\"vlog\");\n      this.getAllBlogs(); // Refresh all blogs to reflect the new comment\n      const index = this.newComment.indexOf(id); // Get the index of the blog id to remove from array\n      this.newComment.splice(index, 1); // Remove id from the array\n      this.enableCommentForm(); // Re-enable the form\n      this.commentForm.reset(); // Reset the comment form\n      this.processing = false; // Unlock buttons on comment form\n      if (this.enabledComments.indexOf(id) < 0) this.expand(id); // Expand comments for user on comment submission\n    });\n  }\n\n  // Expand the list of comments\n  expand(id) {\n    this.enabledComments.push(id); // Add the current blog post id to array\n  }\n\n  // Collapse the list of comments\n  collapse(id) {\n    const index = this.enabledComments.indexOf(id); // Get position of id in array\n    this.enabledComments.splice(index, 1); // Remove id from array\n  }\n\n}\n","<h1 class=\"page-header\">Blog Feed</h1>\n\n<!-- Custom Success/Error Message -->\n<div class=\"row show-hide-message\" *ngIf=\"message && newPost\">\n  <div [ngClass]=\"messageClass\">\n    {{ message }}\n  </div>\n</div>\n\n<!-- New Post Button -->\n<button type=\"button\" name=\"button\" class=\"btn btn-warning\" *ngIf=\"!newPost\" (click)=\"newBlogForm()\">New Post</button>\n\n<!-- Reload Button -->\n<button [disabled]=\"loadingBlogs\" type=\"button\" name=\"button\" class=\"btn btn-default\" *ngIf=\"!newPost\" (click)=\"reloadBlogs()\"><span class=\"glyphicon glyphicon-repeat\"></span>&nbsp;&nbsp;Reload</button>\n\n<br />\n<br />\n\n<!-- New Blog Form -->\n<form [formGroup]=\"form\" name=\"blogForm\" (submit)=\"onBlogSubmit()\" *ngIf=\"newPost\">\n  <!-- Title Input -->\n  <div class=\"form-group\">\n    <label for=\"title\">Title</label>\n    <div [ngClass]=\"{'has-success': form.controls.title.valid, 'has-error': form.controls.title.dirty && form.controls.title.errors}\">\n      <!-- Title Input -->\n      <input type=\"text\" name=\"title\" class=\"form-control\" placeholder=\"*Blog Title\" autocomplete=\"off\" formControlName=\"title\" />\n      <!-- Validation -->\n      <ul class=\"help-block\">\n        <li *ngIf=\"form.controls.title.dirty && form.controls.title.errors?.required\">This field is required.</li>\n        <li *ngIf=\"(form.controls.title.dirty && form.controls.title.errors?.minlength) || (form.controls.title.dirty && form.controls.title.errors?.maxlength)\">Max length: 50, Min length: 5</li>\n        <li *ngIf=\"form.controls.title.dirty && form.controls.title.errors?.alphaNumericValidation\">Must be a letter or number</li>\n      </ul>\n    </div>\n  </div>\n\n  <!-- Body Input -->\n  <div class=\"form-group\">\n    <label for=\"body\">Body</label>\n    <div [ngClass]=\"{'has-success': form.controls.body.valid, 'has-error': form.controls.body.dirty && form.controls.body.errors}\">\n      <!-- Body Input -->\n      <textarea name=\"body\" rows=\"8\" cols=\"80\" placeholder=\"*Body\" class=\"form-control\" formControlName=\"body\"></textarea>\n      <!-- Validation -->\n      <ul class=\"help-block\">\n        <li *ngIf=\"form.controls.body.dirty && form.controls.body.errors?.required\">This field is required.</li>\n        <li *ngIf=\"(form.controls.body.dirty && form.controls.body.errors?.minlength) || (form.controls.body.dirty && form.controls.body.errors?.maxlength)\">Max length: 500, Min length: 5</li>\n      </ul>\n    </div>\n  </div>\n\n  <!-- Go Back Button -->\n  <button [disabled]=\"processing\" type=\"button\" name=\"button\" (click)=\"goBack()\" class=\"btn btn-warning\">Go Back</button>\n  <!-- Submit Button -->\n  <button [disabled]=\"processing || !form.valid\" type=\"submit\" name=\"button\" class=\"btn btn-success\">Submit</button>\n\n</form>\n<!-- New Blog Form -->\n\n<!-- Panel Start -->\n<div *ngIf=\"!newPost\">\n  <!-- Panel Outer Layer -->\n  <div class=\"panel panel-primary\" *ngFor=\"let blog of blogPosts\">\n\n    <!-- Panel Title -->\n    <div class=\"panel-heading\">\n      <h3 class=\"panel-title\">{{ blog.title }}</h3>\n    </div>\n\n    <!-- Panel Body -->\n    <div class=\"panel-body\">\n      {{ blog.body }}\n    </div>\n\n    <!-- Panel Footer Start -->\n    <div class=\"panel-footer\">\n      <strong>Posted by: </strong>{{ blog.createdBy }}\n      <br />\n      <strong>Date: </strong>{{ blog.createdAt | date:'MMM dd, yyyy' }}\n      <br />\n      <div *ngIf=\"username === blog.createdBy\">\n        <strong>Likes: </strong>{{ blog.likes }}\n        <br />\n        <strong>Dislikes: </strong>{{ blog.dislikes }}\n      </div>\n\n      <!-- Edit Button -->\n      <a [routerLink]=\"['/edit-blog/', blog._id]\" *ngIf=\"username === blog.createdBy\"><button type=\"button\" name=\"button\" class=\"btn btn-sm btn-info\">Edit</button></a>\n      <!-- Delete Button -->\n      <a [routerLink]=\"['/delete-blog/', blog._id]\" *ngIf=\"username === blog.createdBy\"><button type=\"button\" name=\"button\" class=\"btn btn-sm btn-danger\">Delete</button></a>\n\n      <!-- Likes Dropdown  -->\n      <div class=\"dropdown\">\n        <!-- Like Button -->\n        <button [disabled]=\"blog.likedBy.indexOf(username) > -1\" type=\"button\" name=\"button\" class=\"btn btn-sm btn-success\" *ngIf=\"username !== blog.createdBy\" (click)=\"likeBlog(blog._id)\"><span class=\"glyphicon glyphicon-thumbs-up\">&nbsp;</span>Likes: {{ blog.likes }}</button>\n        <!-- Dropdown Menu Items -->\n        <div class=\"dropdown-content\">\n          <a [routerLink]=\"['/user/', liker]\" *ngFor=\"let liker of blog.likedBy\">{{ liker }}</a>\n        </div>\n      </div>\n\n      <!-- Dislikes Dropdown  -->\n      <div class=\"dropdown\">\n        <!-- Dislike Button -->\n        <button [disabled]=\"blog.dislikedBy.indexOf(username) > -1\" type=\"button\" name=\"button\" class=\"btn btn-sm btn-warning\" *ngIf=\"username !== blog.createdBy\" (click)=\"dislikeBlog(blog._id)\"><span class=\"glyphicon glyphicon-thumbs-down\">&nbsp;</span>Dislikes: {{ blog.dislikes }}</button>\n        <!-- Dropdown Menu Items -->\n        <div class=\"dropdown-content\">\n          <a [routerLink]=\"['/user/', disliker]\" *ngFor=\"let disliker of blog.dislikedBy\">{{ disliker }}</a>\n        </div>\n      </div>\n\n    </div>\n    <!-- Panel Footer End -->\n\n    <!-- Post Comment Box: Start -->\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\">\n        <!-- Post Comment Button -->\n        <button type=\"button\" name=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"draftComment(blog._id)\" [disabled]=\"newComment.indexOf(blog._id) > -1\">Post Comment</button>\n        <br />\n        <br />\n        <div *ngIf=\"newComment.indexOf(blog._id) > -1\">\n\n          <!-- Form: Comment Form Start -->\n          <form [formGroup]=\"commentForm\">\n            <!-- Textarea Input -->\n            <textarea name=\"comment\" rows=\"10\" cols=\"30\" class=\"form-control\" formControlName=\"comment\"></textarea>\n            <!-- Validation -->\n            <div [ngClass]=\"{'has-success': !commentForm.controls.comment.errors && commentForm.controls.comment.dirty, 'has-error': commentForm.controls.comment.dirty && commentForm.controls.comment.errors}\">\n              <ul class=\"help-block\">\n                <li *ngIf=\"commentForm.controls.comment.errors?.required && commentForm.controls.comment.dirty\">This field is required.</li>\n                <li *ngIf=\"(commentForm.controls.comment.errors?.maxlength && commentForm.controls.comment.dirty) ||(commentForm.controls.comment.errors?.minlength && commentForm.controls.comment.dirty)\">Comment must be at least 1 character but no more than 200.</li>\n              </ul>\n            </div>\n            <!-- Post Button -->\n            <button [disabled]=\"!commentForm.valid || processing\" type=\"submit\" name=\"button\" class=\"btn btn-sm btn-info\" (click)=\"postComment(blog._id)\">Post</button>\n            <!-- Cancel Button -->\n            <button [disabled]=\"processing\" type=\"button\" name=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"cancelSubmission(blog._id)\">Cancel</button>\n          </form>\n          <!-- Form: Comment Form End -->\n\n        </div>\n\n        <!-- Show Comments -->\n        <li *ngIf=\"enabledComments.indexOf(blog._id) === -1 && blog.comments.length > 0\" class=\"list-group-item\">\n          <span (click)=\"expand(blog._id)\">\n            Show comments&nbsp;&nbsp;\n            <div class=\"glyphicon glyphicon-comment\"></div>\n          </span>\n        </li>\n\n        <!-- Hide Comments -->\n        <li *ngIf=\"enabledComments.indexOf(blog._id) > -1\" class=\"list-group-item\">\n          <span (click)=\"collapse(blog._id)\">\n            Hide Comments&nbsp;&nbsp;\n            <div class=\"glyphicon glyphicon-comment\"></div>\n          </span>\n        </li>\n\n        <!-- Comment -->\n        <div *ngIf=\"enabledComments.indexOf(blog._id) > -1\">\n          <li *ngFor=\"let comment of blog.comments\" class=\"list-group-item\">\n            <strong>{{ comment.commentator }}:</strong> {{ comment.comment }}\n          </li>\n        </div>\n    </ul>\n    <!-- Post Comment Box: End -->\n\n  </div>\n  <!-- Panel Outer Layer -->\n</div>\n<!-- Panel End -->","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {BlogserviceService} from '../../../services/blogservice.service';\n@Component({\n  selector: 'app-delblog',\n  templateUrl: './delblog.component.html',\n  styleUrls: ['./delblog.component.css']\n})\nexport class DelblogComponent implements OnInit {\n  message;\n  messageClass;\n  foundBlog = false;\n  processing = false;\n  blog;\n  currentUrl;\n  constructor(\n    private blogService: BlogserviceService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUrl = this.activatedRoute.snapshot.params; // Get URL paramaters on page load\n    // Function for GET request to retrieve blog\n    this.blogService.getSingleBlog(this.currentUrl.id).subscribe(data => {\n      // Check if request was successfull\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Return bootstrap error class\n        this.message = data.message; // Return error message\n      } else {\n        // Create the blog object to use in HTML\n        this.blog = {\n          title: data.blog.title, // Set title\n          body: data.blog.body, // Set body\n          createdBy: data.blog.createdBy, // Set created_by field\n          createdAt: data.blog.createdAt // Set created_at field\n        }\n        this.foundBlog = true; // Displaly blog window\n      }\n    });\n  }\n  \n\n\n  // Function to delete blogs\n  deleteBlog() {\n    this.processing = true; // Disable buttons\n    // Function for DELETE request\n    this.blogService.deleteBlog(this.currentUrl.id).subscribe(data => {\n      // Check if delete request worked\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Return error bootstrap class\n        this.message = data.message; // Return error message\n      } else {\n        this.messageClass = 'alert alert-success'; // Return bootstrap success class\n        this.message = data.message; // Return success message\n        // After two second timeout, route to blog page\n        setTimeout(() => {\n          this.router.navigate(['/blog']); // Route users to blog page\n        }, 2000);\n      }\n    });\n  }\n}\n","<h1 class=\"page-header\">Delete Blog</h1>\n\n<!-- Custom Success/Error Message -->\n<div class=\"row show-hide-message\" *ngIf=\"message\">\n  <div [ngClass]=\"messageClass\">\n    {{ message }}\n  </div>\n</div>\n\n<!-- Modal Confirmation Window -->\n<div class=\"col-md-6\" *ngIf=\"foundBlog\">\n  <!-- Model Outer Layer -->\n  <div class=\"modal-content\">\n    <!-- Modal Header -->\n    <div class=\"modal-header\">\n      <!-- Close Button -->\n      <button type=\"button\" name=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n      <!-- Modal Title -->\n      <h4 class=\"modal-title\">Confirm</h4>\n    </div>\n\n    <!-- Modal Body -->\n    <div class=\"modal-body\">\n      <p>Are you sure you would like to delete this blog?</p>\n    </div>\n\n    <!-- Modal Footer -->\n    <div class=\"modal-footer\">\n      <!-- Yes Button -->\n      <button [disabled]=\"processing\" type=\"button\" name=\"button\" class=\"btn btn-success\" (click)=\"deleteBlog()\">Yes</button>\n      <!-- No Button -->\n      <a routerLink=\"/blog\"><button [disabled]=\"processing\" type=\"button\" name=\"button\" class=\"btn btn-danger\">No</button></a>\n    </div>\n  </div>\n\n  <br />\n\n  <!-- Panel -->\n  <div class=\"panel panel-primary\">\n    <!-- Panel Heading -->\n    <div class=\"panel-heading\">\n      <!-- Panel Title -->\n      <h3 class=\"panel-title\">{{ blog.title }}</h3>\n    </div>\n\n    <!-- Panel Body -->\n    <div class=\"panel-body\">\n      {{ blog.body }}\n    </div>\n\n    <!-- Panel Footer -->\n    <div class=\"panel-footer\">\n      <strong>Posted by: </strong> {{ blog.createdBy }}\n      <br />\n      <strong>Date: </strong> {{ blog.createdAt | date:'MMM dd, yyyy' }}\n    </div>\n  </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {BlogserviceService} from '../../../services/blogservice.service';\n\n@Component({\n  selector: 'app-editblog',\n  templateUrl: './editblog.component.html',\n  styleUrls: ['./editblog.component.css']\n})\nexport class EditblogComponent implements OnInit {\n\n  message;\n  messageClass;\n  blog;\n  processing = false;\n  currentUrl;\n  loading = true;\n\n  constructor(private location: Location,\n    private activatedRoute: ActivatedRoute,\n    private blogService: BlogserviceService,\n    private router: Router) { }\n\n    // Function to Submit Update\n  updateBlogSubmit() {\n    this.processing = true; // Lock form fields\n    // Function to send blog object to backend\n    this.blogService.editBlog(this.blog).subscribe(data => {\n      // Check if PUT request was a success or not\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Set error bootstrap class\n        this.message = data.message; // Set error message\n        this.processing = false; // Unlock form fields\n      } else {\n        this.messageClass = 'alert alert-success'; // Set success bootstrap class\n        this.message = data.message; // Set success message\n        // After two seconds, navigate back to blog page\n        setTimeout(() => {\n          this.router.navigate(['/blog']); // Navigate back to route page\n        }, 2000);\n      }\n    });\n  }\n\n  // Function to go back to previous page\n  goBack() {\n    this.location.back();\n  }\n\n\n\n  ngOnInit(): void {\n    this.currentUrl = this.activatedRoute.snapshot.params; // When component loads, grab the id\n    // Function to GET current blog with id in params\n    this.blogService.getSingleBlog(this.currentUrl.id).subscribe(data => {\n      // Check if GET request was success or not\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\n        this.message = 'Blog not found.'; // Set error message\n      } else {\n        this.blog = data.blog; // Save blog object for use in HTML\n        this.loading = false; // Allow loading of blog form\n      }\n    });\n\n  }\n\n}\n","<h1 class=\"page-header\">Edit Blog</h1>\n\n<!-- Custom Success/Erro Message -->\n<div class=\"row show-hide-message\" *ngIf=\"message\">\n  <div [ngClass]=\"messageClass\">\n    {{ message }}\n  </div>\n</div>\n\n<!-- Edit Blog Form -->\n<form (submit)=\"updateBlogSubmit()\" *ngIf=\"!loading\">\n  <!-- Title Field -->\n  <div class=\"form-group\">\n    <label for=\"title\">Title</label>\n    <!-- Title Input -->\n    <input [disabled]=\"processing\" type=\"text\" name=\"title\" placeholder=\"*Blog Title\" class=\"form-control\" [(ngModel)]=\"blog.title\" />\n  </div>\n\n  <!-- Body Field -->\n  <div class=\"form-group\">\n    <label for=\"body\">Body</label>\n    <!-- Body Input -->\n    <textarea [disabled]=\"processing\" name=\"body\" rows=\"8\" cols=\"80\" [(ngModel)]=\"blog.body\" class=\"form-control\" placeholder=\"*Blog Body\"></textarea>\n  </div>\n\n  <!-- Delete Button -->\n  <a [routerLink]=\"['/delete-blog/', blog._id]\"><button  [disabled]=\"processing\"  type=\"button\" name=\"button\" class=\"btn btn-danger\">Delete</button></a>\n  <!-- Go Back Button -->\n  <button [disabled]=\"processing\" type=\"button\" name=\"button\" class=\"btn btn-success\" (click)=\"goBack()\">Go Back</button>\n  <!-- Save Changes Button -->\n  <button [disabled]=\"processing\" type=\"submit\" name=\"save\" class=\"btn btn-info\">Save Changes</button>\n\n</form>","import { Component, OnInit,ViewChild, AfterViewInit, ViewChildren, ElementRef} from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport{MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\nimport { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport {EditComponent} from '../../dialog/edit/edit.component';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, Observable, merge, fromEvent } from 'rxjs';\n\nimport {EmpService} from '../../services/emp.service';\nimport {map} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport { ToastrService } from 'ngx-toastr';\nimport { AddComponent } from 'src/app/dialog/add/add.component';\nimport { DeleteComponent } from 'src/app/dialog/delete/delete.component';\n@Component({\n  selector: 'app-changemate',\n  templateUrl: './changemate.component.html',\n  styleUrls: ['./changemate.component.css']\n})\nexport class ChangemateComponent implements OnInit{\n  medicineprice:Medicineprice[];\n  \n\n\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator:MatPaginator;\n  @ViewChild('filter',  {static: true}) filter: ElementRef;\n  //displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  displayedColumns: string[] = ['medname', 'price','id','quantity','add'];\n  //displayedcolumns: string[] = ['medname', 'price','id'];\n    //dataSource =new MatTableDataSource(ELEMENT_DATA);\n // dataSource;\n // @ViewChild(MatPaginator) paginator: MatPaginator;  \n // @ViewChild(MatSort) sort: MatSort;\n\n\n //below is for edit in mattable\n index: number;\n  id: string;\n  exampleDatabase: EmpService | null;\n  //exampleDatabase: DataService | null;\n  dataSource: ExampleDataSource | null;\n\n\n\n\n  constructor(private authService:AuthService ,\n    public dialog: MatDialog,\n    public dataService:EmpService,\n    public httpClient: HttpClient,\n    private flashMessage:FlashMessagesService,\n    private toastr: ToastrService) \n    {\n  }\n\n\n\n\n  ngOnInit() {  \n   // this.authService.viewAllMedicinePrice().subscribe(medicineprice=>{\n //     this.dataSource=new MatTableDataSource(medicineprice);\n //   })\n    //  this.dataSource.paginator = this.paginator;  \n   \n    this.loadData();\n     \n  } \n  refresh() {\n    this.loadData();\n  }\n  /*\n  ngAfterViewInit() { \n    this.dataSource.sort = this.sort; \n    this.dataSource.paginator = this.paginator;\n  }\n  */\n\n\n  applyfilter(filterValue: string) {  \n    this.dataSource.filter = filterValue.trim().toLowerCase();  \n  \n   \n  } \n\n\n  addNew(){\n    const dialogRef = this.dialog.open(AddComponent, {\n      data: {issue: this.medicineprice }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.exampleDatabase.dataChange.value.push(this.dataService.getDialogData());\n        this.refreshTable();\n      }\n    });\n\n  }\n  startEdit(i: number,medname:string,price:number,quantity:number,id: string){\n    this.id = id;\n    this.index = i;\n    console.log(this.index);\n    const dialogRef = this.dialog.open(EditComponent, {\n      data: {id: id,medname: medname, price: price,quantity:quantity}\n    });\n\n    \n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(x => x.id === this.id);\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[foundIndex] = this.dataService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n      }\n    });\n    \n  }\n  deleteItem(i: number, medname:string,price:number,quantity:number,id: string) {\n    this.index = i;\n    this.id = id;\n    const dialogRef = this.dialog.open(DeleteComponent, {\n      data: {id: id, medname: medname, price: price,quantity:quantity}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(x => x.id === this.id);\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n      }\n    });\n  }\n  \n\n \n\n  private refreshTable() {\n    // Refreshing table using paginator\n    // Thanks yeager-j for tips\n    // https://github.com/marinantonio/angular-mat-table-crud/issues/12\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n\n  public loadData() {\n    this.exampleDatabase = new EmpService(this.httpClient,this.toastr);\n    this.dataSource = new ExampleDataSource(this.exampleDatabase, this.paginator, this.sort);\n    fromEvent(this.filter.nativeElement, 'keyup')\n      // .debounceTime(150)\n      // .distinctUntilChanged()\n      .subscribe(() => {\n        if (!this.dataSource) {\n          return;\n        }\n        this.dataSource.filter = this.filter.nativeElement.value;\n      });\n  }\n}\n\n  \n\n\n\n\nexport class ExampleDataSource extends DataSource<Medicineprice> {\n  _filterChange = new BehaviorSubject('');\n\n  get filter(): string {\n    return this._filterChange.value;\n  }\n\n  set filter(filter: string) {\n    this._filterChange.next(filter);\n  }\n\n  filteredData: Medicineprice[] = [];\n  renderedData: Medicineprice[] = [];\n\n  constructor(public _exampleDatabase: EmpService,\n              public _paginator: MatPaginator,\n              public _sort: MatSort) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this._filterChange.subscribe(() => this._paginator.pageIndex = 0);\n  }\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Medicineprice[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this._filterChange,\n      this._paginator.page\n    ];\n\n    this._exampleDatabase.getAllIssues();\n\n\n    return merge(...displayDataChanges).pipe(map( () => {\n        // Filter data\n        this.filteredData = this._exampleDatabase.data.slice().filter((issue: Medicineprice) => {\n          const searchStr = (issue.id + issue.medname + issue.price+issue.quantity).toLowerCase();\n          return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n        });\n\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n        this.renderedData = sortedData.splice(startIndex, this._paginator.pageSize);\n        return this.renderedData;\n      }\n    ));\n  }\n\n  disconnect() {}\n\n\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Medicineprice[]): Medicineprice[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n\n      switch (this._sort.active) {\n        case 'id': [propertyA, propertyB] = [a.id, b.id]; break;\n        case 'medname': [propertyA, propertyB] = [a.medname, b.medname]; break;\n        case 'price': [propertyA, propertyB] = [a.price, b.price]; break;\n        case 'quantity': [propertyA, propertyB] = [a.quantity, b.quantity]; break;\n        \n      }\n\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n      return (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1);\n    });\n  }\n}\n\n\n\n\n\ninterface Medicineprice{\n  medname:string,\n  price:number,\n  quantity:number,\n  id:string\n  \n  }\n\n","<p>changemate works!</p>\n<!--\n<mat-form-field>\n    <input (keyup)=\"applyfilter($event.target.value)\" matInput placeholder=\"Enter\">\n</mat-form-field>\n-->\n<div class=\"form\">\n  <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n    <input matInput #filter placeholder=\"Filter issues\">\n  </mat-form-field>\n</div>\n\n<table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"medname\">\n      <th mat-header-cell mat-sort-header *matHeaderCellDef> Medicine name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.medname}} </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.price}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"quantity\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Quantity </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.quantity}} </td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"add\">\n        <mat-header-cell *matHeaderCellDef>\n          <button mat-icon-button color=\"primary\" (click)=\"addNew()\">\n            <mat-icon>add</mat-icon>\n          </button>\n        </mat-header-cell>\n\n        <mat-cell *matCellDef=\"let row; let i=index;\">\n          <button mat-icon-button color=\"accent\" (click)=\"startEdit(i,row.medname,row.price,row.quantity,row.id)\">\n            <mat-icon aria-label=\"Edit\">edit</mat-icon>\n          </button>\n       \n\n     \n          <button mat-icon-button color=\"accent\" (click)=\"deleteItem(i,row.medname,row.price,row.quantity,row.id)\">\n            <mat-icon aria-label=\"Delete\">delete</mat-icon>\n          </button>\n        </mat-cell>\n\n  </ng-container>\n    \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>  \n  <mat-paginator #paginator\n  [length]=\"dataSource.filteredData.length\"\n  [pageIndex]=\"0\"\n  [pageSize]=\"10\"\n  [pageSizeOptions]=\"[5, 10, 25, 100]\">\n</mat-paginator>\n\n","import { Component, OnInit} from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FormArray, FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-changeprice',\n  templateUrl: './changeprice.component.html',\n  styleUrls: ['./changeprice.component.css']\n})\nexport class ChangepriceComponent implements OnInit {\n  medicineprice:Medicineprice[];\n  showMedicine:boolean=false;\n  editRowId:any='';\n  temp:any=false;\n\n\n\n   \n\n  constructor(private authService:AuthService) { }\n  \n  ngOnInit(): void {\n    this.authService.viewAllMedicinePrice().subscribe(medicineprice=>\n      this.medicineprice=medicineprice);\n      console.log(this.medicineprice[0].medname);\n    \n  }\n\n\n  Edit(val){\n     \n    this.editRowId=val;\n  }\n \n\n\n  Add(){\n    \n    console.log(this.medicineprice.length);\n    this.temp=true;\n  }\n  //this will edit the changes in the datbase\n  Save(val){\n    \n    this.authService.saveeditedmed(this.medicineprice[val]).subscribe(data=>{\n      if(data.success){\n       \n      }\n      else{\n\n  \n      }\n    });\n\n\n    \n  }\n\n \n\n\n}\ninterface Medicineprice{\n  medname:string,\n  price:Number,\n  id:string,\n  \n  }\n\n","<p>changeprice works!</p>\n\n\n<table class=\"table table-striped table-bordered\"> \n    <thead>  \n        <th>Medicine Name</th>          \n        <th>Price</th> \n        <th>Edit</th>  \n       </thead>  \n       <tbody>  \n        \n\n<tr *ngFor=\"let pre of medicineprice\">\n    <td *ngIf=\"pre.id===editRowId\"><input type=\"text\" [(ngModel)]=\"pre.medname\"></td>\n    <td *ngIf=\"pre.id!==editRowId\" >{{pre.medname}}</td>\n    <td *ngIf=\"pre.id===editRowId\"><input type=\"text\" [(ngModel)]=\"pre.price\"></td>\n    <td *ngIf=\"pre.id!==editRowId\">{{pre.price}}</td>\n    \n    <td>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"Edit(pre.id)\">Edit</button>  \n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n    \n        <button type=\"button\" class=\"btn btn-danger\">Delete</button>  \n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"Save(pre.id)\">Save</button> \n    </td>\n<br>\n</tr>\n\n<tr *ngIf=\"temp\">\n    <td ><input type=\"text\"></td>\n</tr>\n\n\n</tbody>\n</table>\n\n<button type=\"submit\" class=\"btn btn-primary\" (click)=\"Add()\">Add New Medicine</button>\n\n\n<br><br><br><br><br>\n","import { Component, OnInit,ViewChild,ElementRef} from '@angular/core';\nimport {TransferService} from '../../services/transfer.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport *as jsPDF from 'jspdf'\nimport {FlashMessagesService} from 'angular2-flash-messages';\n@Component({\n  selector: 'app-checkoutprescription',\n  templateUrl: './checkoutprescription.component.html',\n  styleUrls: ['./checkoutprescription.component.css']\n})\nexport class CheckoutprescriptionComponent implements OnInit {\n  @ViewChild('content') content:ElementRef;\n  //medicineprice:Medicineprice;\n              //medicineprice:{price:Number,total:Number};\n  medicineprice:Medicineprice;\n  total:number=0;\n  data=this.transferService.getData();\n  \n \n\n  constructor(private transferService:TransferService,private router:Router,\n    private authService:AuthService,\n    private flashMessage:FlashMessagesService) { }\n\n  ngOnInit(): void {\n    var x;\n    var mediname={medname:this.data.medname,quant:this.data.quantity};\n    this.authService.viewMedicinePrice(mediname).subscribe(medicineprice=>\n    \n      this.medicineprice=medicineprice);\n      console.log(this.medicineprice);\n     \n        for(x in this.medicineprice.price)\n        {console.log(JSON.stringify(this.medicineprice.price[x]));\n          this.total=this.total+this.medicineprice.price[x];\n        }\n       \n      \n\n      \n\n\n    \n\n  }\n\n  public downloadpdf(){\n    this.updateQuantity();\n    console.log(\"PDF WORKS\");\n    let doc=new jsPDF();\n\n    let specialElementHandlers={\n      '#editor':function(element,renderer){\n        return true;\n      }\n    };\n\n    let content=this.content.nativeElement;\n    doc.fromHTML(content.innerHTML,15,15,{\n      'width':190,\n      'elementHandlers':specialElementHandlers\n    });\n\n    doc.save('tst.pdf')\n\n  }\n\n  public goBack()\n  {\n    \n  }\n\n  updateQuantity()\n  {var x;\n\n    var obj={\n              medname:[],\n              quantity:[]\n            \n            };\n            \n            for(x in this.medicineprice.medname)\n            {\n              obj.medname[x]=this.medicineprice.medname[x];\n              obj.quantity[x]=this.medicineprice.quantity[x];\n            }\n            \n           this.authService.updatequant(obj).subscribe(data=>{\n              \n             \n                   //after inserting prescription to database\n              \n           \n\n           \n        });\n        this.flashMessage.show(\"Checkout Successful\",{cssClass:'alert-success',timeout:5000});\n              this.router.navigate(['graph']);\n\n  }\n  \n\n  \n\n}\ninterface Medicineprice{\n  medname:string[],\n  price:number[],\n  quantity:number[],\n  total:number\n    \n  }","\n<p>checkoutprescription works!</p>\n<div id=\"content\" #content>\nUsername:{{data.username}}<br>\nMedicine:{{data.medname}}<br>\nbreakfast:{{data.breakfast}}<br>\nlunch:{{data.lunch}}<br>\n<br><br><br>\n<hr>\n     <table class=\"table table-striped table-bordered\">\n  <thead>\n              <tr>\n                <th>Medicine Name</th>\n                <th>Price</th>\n                <th>Quantity</th>\n                \n              </tr>\n            </thead>\n            <tbody>\n                \n                  <tr *ngFor=\"let mprice of medicineprice.price let i=index\">\n                    <td>{{data.medname[i]}}</td>\n                    <td>{{mprice}}</td>\n                    <td>{{data.quantity[i]}}</td>\n                  </tr>\n                  \n            </tbody>\n          </table>\n       \n<hr>\n<b>Total</b>{{medicineprice.total}}\n<br>\n\n</div>\n<button (click)=\"updateQuantity()\">Submit</button>\n<button (click)=\"downloadpdf()\">Download PDF</button>\n<button (click)=\"goBack()\">Discard</button>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport{Router} from '@angular/router';\n@Component({\n  selector: 'app-disease',\n  templateUrl: './disease.component.html',\n  styleUrls: ['./disease.component.css']\n})\nexport class DiseaseComponent implements OnInit {\n  dname:string;\n  desc:string;\n  symp:string;\n  tre:string;\n  cause:string;\n  constructor(private authService:AuthService,\n    private router:Router,\n    private flashMessage:FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n\n  Submit(){\n    const disease={\n      dname:this.dname,\n      desc:this.desc,\n      symp:this.symp,\n      tre:this.tre,\n      cause:this.cause\n    }\n\n    this.authService.registerDisease(disease).subscribe(data=>{\n      if(data.success){\n        this.flashMessage.show(\"Drug registered in database\",{cssClass:'alert-success',timeout:3000});\n        this.router.navigate(['/']);\n      }\n      else{\n\n        this.flashMessage.show(\"Something Went Wrong\",{cssClass:'alert-danger',timeout:3000});\n        \n      }\n    });\n\n\n\n  }\n\n}\n","Disease Name:\n<input type=\"text\" [(ngModel)]=\"dname\" name=\"dname\" class=\"form-control\" placeholder=\"Enter Disease Name\">\n<br><br>\nDescription:\n<input type=\"text\" [(ngModel)]=\"desc\" name=\"desc\" class=\"form-control\" placeholder=\"Enter Description\">\n<br><br>\nSymptoms:\n<input type=\"text\" [(ngModel)]=\"symp\" name=\"symp\" class=\"form-control\" placeholder=\"Enter symptoms\">\n<br><br>\nTreatment\n<input type=\"text\" [(ngModel)]=\"tre\" name=\"tre\" class=\"form-control\" placeholder=\"Enter Tratment for the diease\">\nCauses:\n<input type=\"text\" [(ngModel)]=\"cause\" name=\"cause\" class=\"form-control\" placeholder=\"Enter causes\">\n\n<br><br><br><br>\n<button type=\"submit\" class=\"btn btn-primary\" (click)=\"Submit()\">Submit</button>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport{Router} from '@angular/router';\n@Component({\n  selector: 'app-drug',\n  templateUrl: './drug.component.html',\n  styleUrls: ['./drug.component.css']\n})\nexport class DrugComponent implements OnInit {\n  mname:string;\n  desc:String;\n  uses:String;\n  pre:String;\n  \n  constructor(private authService:AuthService,\n    private router:Router,\n    private flashMessage:FlashMessagesService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  Submit(){\n    const drug={\n      mname:this.mname,\n      desc:this.desc,\n      uses:this.uses,\n      pre:this.pre\n    }\n\n    this.authService.registerDrug(drug).subscribe(data=>{\n      if(data.success){\n        this.flashMessage.show(\"Drug registered in database\",{cssClass:'alert-success',timeout:3000});\n        this.router.navigate(['/']);\n      }\n      else{\n\n        this.flashMessage.show(\"Something Went Wrong\",{cssClass:'alert-danger',timeout:3000});\n        \n      }\n    });\n\n\n\n  }\n\n}\n\n","Medicine Name:\n<input type=\"text\" [(ngModel)]=\"mname\" name=\"mname\" class=\"form-control\" placeholder=\"Enter Medicine Name\">\n<br><br>\nDescription:\n<input type=\"text\" [(ngModel)]=\"desc\" name=\"desc\" class=\"form-control\" placeholder=\"Enter Description\">\n<br><br>\nUses:\n<input type=\"text\" [(ngModel)]=\"uses\" name=\"uses\" class=\"form-control\" placeholder=\"Enter Usage\">\n<br><br>\nPrecaution:\n<input type=\"text\" [(ngModel)]=\"pre\" name=\"pre\" class=\"form-control\" placeholder=\"Enter Necessary Precaution to be taken\">\n\n<br><br><br><br>\n<button type=\"submit\" class=\"btn btn-primary\" (click)=\"Submit()\">Submit</button>\n","import { Component, OnInit } from '@angular/core';\nimport{Router} from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n@Component({\n  selector: 'app-encyclo',\n  templateUrl: './encyclo.component.html',\n  styleUrls: ['./encyclo.component.css']\n})\nexport class EncycloComponent implements OnInit {\n    drug:Drug [];\n    disease:Disease[];\n  constructor(private router:Router,private authService:AuthService) { }\n\n  ngOnInit(): void {\n   \n\n    \n\n  }\n\n  drugload()\n  {\n\n    this.authService.viewDrugs().subscribe(drug=>{\n     \n      \n      this.drug=drug;\n\n  });\n\n  }\n\n  diseaseload()\n  {\n    this.authService.viewDiseases().subscribe(disease=>{\n     \n      \n      this.disease=disease;\n  });\n \n\n\n}\n}\n\ninterface Drug{\n  mname:string,\n    desc:string,\n    uses:string,\n    pre:string\n    \n}\n\ninterface Disease{\n  dname:string,\n    desc:string,\n    symp:string,\n    tre:string,\n    cause:string\n    \n}\n","<button (click)=\"drugload()\">Load Drugs</button>\n<ul class=\"list-group\">\n       \n    <li class=\"list-group-item\" *ngFor=\"let pree of drug; index as i\" ><b>MEDICINE:</b>{{pree.mname}}<br><br><b>Description:</b>{{pree.desc}}<br><br><b>Uses:</b>{{pree.uses}}<br><br><b>Precaution:</b>{{pree.pre}}\n        \n    \n    </li>\n</ul> \n\n<button (click)=\"diseaseload()\">Load Diseases</button>\n<ul class=\"list-group\">\n       \n    <li class=\"list-group-item\" *ngFor=\"let pr of disease; index as i\" ><b>Disease:</b>{{pr.dname}}<br><br><b>Description:</b>{{pr.desc}}<br><br><b>Symptoms:</b>{{pr.symp}}<br><br><b>Treatment:</b>{{pr.tre}}<br><br><b>Causes:</b>{{pr.cause}}\n        \n    \n    </li>\n</ul> ","import { Component, OnInit } from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport {AuthService} from '../../services/auth.service';\n@Component({\n  selector: 'app-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.css']\n})\nexport class GraphComponent implements OnInit {\n\n/*\napidata=[ { name: 'Botyle', y: 101 },\n{ name: 'Isofenyle', y: 12 },\n{ name: 'Propyl', y: 31 },\n{ name: 'Crocine', y: 3 },\n{ name: 'Dispereine', y: 8 },\n{ name: 'Penicilin', y: 69 },\n{ name: 'skroy', y: 11 } ];\n*/\napidata=[];\nloading = true;\nconstructor(private authService:AuthService) { }\n\nHighcharts: any;\nchartOptions: any;\n/*\n  Highcharts: typeof Highcharts = Highcharts; \n  chartOptions: Highcharts.Options = {\n    chart: {\n      plotBackgroundColor: null,\n      plotBorderWidth: null,\n      plotShadow: false,\n      type: 'pie'\n  },\n  title: {\n      text: 'Browser market shares in January, 2018'\n  },\n  tooltip: {\n      pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n  },\n  accessibility: {\n      point: {\n          valueSuffix: '%'\n      }\n  },\n  plotOptions: {\n      pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n              enabled: true,\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n          }\n      }\n  },\n  series: [{\n      name: 'Brands',\n      colorByPoint: true,\n      data: this.apidata\n  }]\n}\n\n  */\n  \n\n  ngOnInit(): void {\n    \n    this.authService.getgraph().subscribe(data=>{\n      this.Highcharts = Highcharts;\n      this.chartOptions = {\n          chart: {\n            plotBackgroundColor: null,\n            plotBorderWidth: null,\n            plotShadow: false,\n            type: 'pie'\n          },\n          title: {\n            text: \"Medicines Stock\"\n          },\n          tooltip: {\n            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n          },\n          accessibility: {\n            point: {\n                valueSuffix: '%'\n            }\n        },\n        plotOptions: {\n          pie: {\n              allowPointSelect: true,\n              cursor: 'pointer',\n              dataLabels: {\n                  enabled: true,\n                  format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n              }\n          }\n      },\n         \n      series: [{\n        name: 'stock',\n        colorByPoint: true,\n        data: data\n    }]\n      };\n      this.loading = false;\n  },\n  () => { });\n   \n    \n  }\n\n}\n","<div *ngIf=\"!loading && chartOptions\">\n\n\n<highcharts-chart \n  [Highcharts]=\"Highcharts\"\n\n  \n  [options]=\"chartOptions\"\n\n\n  style=\"width: 100%; height: 400px; display: block;\"\n></highcharts-chart>\n</div>\n<br>\n<app-graph2></app-graph2>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport * as Highcharts from 'highcharts';\n@Component({\n  selector: 'app-graph2',\n  templateUrl: './graph2.component.html',\n  styleUrls: ['./graph2.component.css']\n})\nexport class Graph2Component implements OnInit {\n  apidata=[];\nloading = true;\nHighcharts: any;\nchartOptions: any;\n  constructor(private authService:AuthService) { }\n\n  ngOnInit(): void {\n    const ob={axis:[]};\n    var x;\n    this.authService.getgraph2().subscribe(data=>{\n      for(x in data)\n      {\n         ob[x]=data[x].name;\n      }\n      console.log(ob);\n      \n      this.Highcharts = Highcharts;\n      this.chartOptions = { \n        title: {\n        text: 'Sales Chart'\n    },\n\n    subtitle: {\n        text: 'Plain'\n    },\n\n    xAxis: {\n        categories:ob\n    },\n\n      series: [{\n        type: 'column',\n        colorByPoint: true,\n        data:data,\n      showInLegend: false}]\n    };\n    this.loading = false;\n  },\n  () => { });\n}\n\n}\n","<div *ngIf=\"!loading && chartOptions\">\n\n\n    <highcharts-chart \n      [Highcharts]=\"Highcharts\"\n    \n      \n      [options]=\"chartOptions\"\n    \n    \n      style=\"width: 100%; height: 400px; display: block;\"\n    ></highcharts-chart>\n    </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {Globals} from '../../services/glob';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n   \n   password:string;\n   email:string;\n  \n   constructor(private authService:AuthService,\n    private router:Router,\n    private flashMessage:FlashMessagesService,\n    private globals: Globals) {\n\n   }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit(){\n    const user={\n      email:this.email,\n      password:this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data=>{\n        if(data.success){\n          this.authService.storeUserData(data.token,data.user);\n            this.flashMessage.show(\"You are Logged In\",{cssClass:'alert-success',timeout:5000});\n            this.router.navigate(['dashboard']);\n\n            //temp\n            this.globals.set(data.user.username);\n           // console.log(this.globals.uname);\n          \n        } \n        else{\n            this.flashMessage.show(data.msg,{cssClass:'alert-danger',timeout:5000});\n            this.router.navigate(['login']);\n        } \n\n    });\n\n  }\n\n}\n","<form (submit)=\"onLoginSubmit()\">\n    <fieldset>\n      <legend>Login</legend>\n      \n\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n        \n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\"class=\"form-control\" id=\"password\" placeholder=\"Password\">\n      </div>\n      \n     \n      \n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </fieldset>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {Globals} from '../../services/glob';\n@Component({\n  selector: 'app-loginchemist',\n  templateUrl: './loginchemist.component.html',\n  styleUrls: ['./loginchemist.component.css']\n})\nexport class LoginchemistComponent implements OnInit {\n  password:string;\n  email:string;\n  constructor(private authService:AuthService,\n    private router:Router,\n    private flashMessage:FlashMessagesService,\n    private globals: Globals) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit(){\n    const user={\n      email:this.email,\n      password:this.password\n    }\n\n    this.authService.authenticateChemist(user).subscribe(data=>{\n        if(data.success){\n          this.authService.storeChemistData(data.token,data.user);\n            this.flashMessage.show(\"You are Logged In\",{cssClass:'alert-success',timeout:5000});\n            this.router.navigate(['profile']);\n            //below istemp\n            this.globals.uname=data.user.username;\n            //console.log(this.globals.uname);\n        } \n        else{\n            this.flashMessage.show(data.msg,{cssClass:'alert-danger',timeout:5000});\n            this.router.navigate(['login']);\n        } \n\n    });\n\n  }\n\n}\n","<form (submit)=\"onLoginSubmit()\">\n    <fieldset>\n      <legend>Login Chemist</legend>\n      \n\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n        \n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\"class=\"form-control\" id=\"password\" placeholder=\"Password\">\n      </div>\n      \n     \n      \n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </fieldset>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {Globals} from '../../services/glob';\n@Component({\n  selector: 'app-logindoctor',\n  templateUrl: './logindoctor.component.html',\n  styleUrls: ['./logindoctor.component.css']\n})\nexport class LogindoctorComponent implements OnInit {\n   \n  password:string;\n  email:string;\n \n  constructor(private authService:AuthService,\n    private router:Router,\n    private flashMessage:FlashMessagesService,\n    private globals: Globals) { }\n\n  ngOnInit(): void {\n  }\n  onLoginSubmit(){\n    const user={\n      email:this.email,\n      password:this.password\n    }\n\n    this.authService.authenticateDoctor(user).subscribe(data=>{\n        if(data.success){\n          this.authService.storeDoctorData(data.token,data.user);\n            this.flashMessage.show(\"You are Logged In\",{cssClass:'alert-success',timeout:5000});\n            this.router.navigate(['dashboard']);\n            this.globals.set(data.user.username);\n        } \n        else{\n            this.flashMessage.show(data.msg,{cssClass:'alert-danger',timeout:5000});\n            this.router.navigate(['login']);\n        } \n\n    });\n\n  }\n\n}\n","<form (submit)=\"onLoginSubmit()\">\n    <fieldset>\n      <legend>Login Doctor</legend>\n      \n\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n        \n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\"class=\"form-control\" id=\"password\" placeholder=\"Password\">\n      </div>\n      \n     \n      \n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </fieldset>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public authService:AuthService,\n    private router:Router,\n    private flashMessage:FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show(\"You Have been successfully logged out\",{cssClass:'alert-success',timeout:3000});\n    this.router.navigate(['/login']);\n  }\n\n}\n","\n\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n    <a class=\"navbar-brand\" href=\"/\">ITM App</a>\n    \n    <div class=\"collapse navbar-collapse\" id=\"navbarsExample03\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/']\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li *ngIf=\"authService.loggedInDoctor()\" class [routerLinkActive]=\"['active']\">\n          <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">DashBoard <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li *ngIf=\"authService.loggedInDoctor()\" class [routerLinkActive]=\"['active']\">\n          <a class=\"nav-link\" [routerLink]=\"['/encyclo']\">Encyclopedia<span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li *ngIf=\"authService.loggedInDoctor()\" class [routerLinkActive]=\"['active']\">\n          <a class=\"nav-link\" [routerLink]=\"['/blog']\">Blog<span class=\"sr-only\">(current)</span></a>\n        </li>\n        <!-- <li *ngIf=\"authService.loggedInChemist()\" class [routerLinkActive]=\"['active']\">\n          <a class=\"nav-link\" [routerLink]=\"['/changeprice']\">Change Price<span class=\"sr-only\">(current)</span></a>\n        </li> -->\n        <li *ngIf=\"authService.loggedIn()\" class [routerLinkActive]=\"['active']\">\n          <a class=\"nav-link\" [routerLink]=\"['/viewprescriptionpat']\">View Prescription<span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li *ngIf=\"authService.loggedInChemist()\" class [routerLinkActive]=\"['active']\">\n          <a class=\"nav-link\" [routerLink]=\"['/changemate']\">Material Price<span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li *ngIf=\"authService.loggedInDoctor()\" class [routerLinkActive]=\"['active']\">\n          <a class=\"nav-link\" [routerLink]=\"['/disease']\">Add Disease Information<span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li *ngIf=\"authService.loggedInDoctor()\" class [routerLinkActive]=\"['active']\">\n          <a class=\"nav-link\" [routerLink]=\"['/drug']\">Add Drug Informatoin<span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li *ngIf=\"authService.loggedIn() || authService.loggedInChemist() || authService.loggedInDoctor()\" class [routerLinkActive]=\"['active']\">\n          <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile<span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li *ngIf=\"!authService.loggedIn() && !authService.loggedInChemist() && !authService.loggedInDoctor()\" class [routerLinkActive]=\"['active']\">\n            <a class=\"nav-link\" [routerLink]=\"['/login']\">Login Patient<span class=\"sr-only\">(current)</span></a>\n          </li>\n          <li *ngIf=\"!authService.loggedIn() && !authService.loggedInChemist() && !authService.loggedInDoctor()\" class [routerLinkActive]=\"['active']\">\n            <a class=\"nav-link\" [routerLink]=\"['/loginchemist']\">Login Chemist<span class=\"sr-only\">(current)</span></a>\n          </li>\n          <li *ngIf=\"!authService.loggedIn() && !authService.loggedInChemist() && !authService.loggedInDoctor()\" class [routerLinkActive]=\"['active']\">\n            <a class=\"nav-link\" [routerLink]=\"['/logindoctor']\">Login Doctor<span class=\"sr-only\">(current)</span></a>\n          </li>\n        <li *ngIf=\"!authService.loggedIn() && !authService.loggedInChemist() && !authService.loggedInDoctor()\" class [routerLinkActive]=\"['active']\">\n            <a class=\"nav-link\" [routerLink]=\"['/register']\">Register Patient <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li *ngIf=\"!authService.loggedIn() && !authService.loggedInChemist() && !authService.loggedInDoctor()\" class [routerLinkActive]=\"['active']\">\n          <a class=\"nav-link\" [routerLink]=\"['/registerdoctor']\">Register Doctor<span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li *ngIf=\"!authService.loggedIn() && !authService.loggedInChemist() && !authService.loggedInDoctor()\" class [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" [routerLink]=\"['/registerchemist']\">Register Chemist<span class=\"sr-only\">(current)</span></a>\n    </li>\n    <!-- <li *ngIf=\"authService.loggedInChemist()\" class [routerLinkActive]=\"['active']\">\n      <a class=\"nav-link\" [routerLink]=\"['/addprescription']\">Add Prescription<span class=\"sr-only\">(current)</span></a>\n    </li> -->\n    <li *ngIf=\"authService.loggedInDoctor()\" class [routerLinkActive]=\"['active']\">\n      <a class=\"nav-link\" [routerLink]=\"['/addprescriptionmat']\">Add  MAT Prescription<span class=\"sr-only\">(current)</span></a>\n    </li>\n    <!-- <li *ngIf=\"authService.loggedInChemist()\" class [routerLinkActive]=\"['active']\">\n      <a class=\"nav-link\" [routerLink]=\"['/addfinal']\">Final Prescription<span class=\"sr-only\">(current)</span></a>\n    </li> -->\n\n    <li *ngIf=\"authService.loggedInChemist()\" class [routerLinkActive]=\"['active']\">\n      <a class=\"nav-link\" [routerLink]=\"['/graph']\">Graph<span class=\"sr-only\">(current)</span></a>\n    </li>\n    <li *ngIf=\"authService.loggedInChemist()\" class [routerLinkActive]=\"['active']\">\n      <a class=\"nav-link\" [routerLink]=\"['/viewprescription']\">View Prescription<span class=\"sr-only\">(current)</span></a>\n    </li>\n   \n\n        <li *ngIf=\"authService.loggedIn() || authService.loggedInChemist() || authService.loggedInDoctor()\"  class>\n          <a class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout <span class=\"sr-only\">(current)</span></a>\n      </li>\n        \n      </ul>\n    </div>\n  </nav>","import { Component, OnInit,ViewChild,ElementRef } from '@angular/core';\nimport *as jsPDF from 'jspdf'\n@Component({\n  selector: 'app-pdf',\n  templateUrl: './pdf.component.html',\n  styleUrls: ['./pdf.component.css']\n})\nexport class PdfComponent implements OnInit {\n  @ViewChild('content') content:ElementRef;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public downloadpdf(){\n    console.log(\"PDF WORKS\");\n    let doc=new jsPDF();\n\n    let specialElementHandlers={\n      '#editor':function(element,renderer){\n        return true;\n      }\n    };\n\n    let content=this.content.nativeElement;\n    doc.fromHTML(content.innerHTML,15,15,{\n      'width':190,\n      'elementHandlers':specialElementHandlers\n    });\n\n    doc.save('tst.pdf')\n\n  }\n\n}\n","<body bgcolor=\"cyan\">\n<div id=\"content\" #content>\n    ITM Universe\n</div>\n\n<button (click)=\"downloadpdf()\">Download pdf</button>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport{Router} from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\n\nexport class ProfileComponent implements OnInit {\n  user;\n  constructor( private authService:AuthService,\n    private router:Router) { }\n\n  ngOnInit() {\n    this.authService.getProfileDoctor().subscribe(profile=>{\n      this.user=profile.user;\n      //console.log(this.user);\n    },\n    err=>{\n      console.log(err);\n      return false;\n      \n    });\n  }\n\n}\n","<div *ngIf=\"user\">\n    <h2 class=\"page-header\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Username:{{user.username}}</li>\n        <li class=\"list-group-item\">Email:{{user.email}}</li>\n        <li class=\"list-group-item\">Email:{{user._id}}</li>\n    </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-publicprof',\n  templateUrl: './publicprof.component.html',\n  styleUrls: ['./publicprof.component.css']\n})\nexport class PublicprofComponent implements OnInit {\n  currentUrl;\n  username;\n  email;\n  foundProfile = false;\n  messageClass;\n  message;\n  user;\n  constructor(private authService: AuthService,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n    \n    this.currentUrl = this.activatedRoute.snapshot.params; // Get URL parameters on page load\n    // Service to get the public profile data\n\n\n    this.authService.getProfileDoctorbyname(this.currentUrl.username).subscribe(profile=>{\n      this.user=profile.user;\n      //console.log(this.user);\n    },\n    err=>{\n      console.log(err);\n      return false;\n      \n    });\n\n\n\n  }\n\n}\n","<div *ngIf=\"user\">\n  <h2 class=\"page-header\">{{user.name}}</h2>\n  <ul class=\"list-group\">\n      <li class=\"list-group-item\">Username:{{user.username}}</li>\n      <li class=\"list-group-item\">Email:{{user.email}}</li>\n      <li class=\"list-group-item\">Email:{{user._id}}</li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from 'src/app/services/validate.service';\n\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport { AuthService } from 'src/app/services/auth.service';\n\nimport{Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name:string;\n  username:string;\n  email:string;\n  password:string;\n  \n  constructor(private ValidateService:ValidateService,\n    private flashMessage:FlashMessagesService,\n    private authService:AuthService,\n    private router:Router) { \n\n  }\n\n  ngOnInit(): void {\n\n\n  }\n\n\n  onRegisterSubmit(){\n    const user={\n      name:this.name,\n      username:this.username,\n      email:this.email,\n      password:this.password\n    }\n\n\n    if(!this.ValidateService.validateRegister(user)){\n      this.flashMessage.show(\"Please Fill in All The Fields\",{cssClass:'alert-danger',timeout:3000});\n      return false;\n    }\n\n    if(!this.ValidateService.validateEmail(user.email)){\n      this.flashMessage.show(\"Please Use A Valid Email Address\",{cssClass:'alert-danger',timeout:3000});\n      return false;\n    } \n\n    //Register USER\n\n    this.authService.registerUser(user).subscribe(data=>{\n      if(data.success){\n        this.flashMessage.show(\"You are now Registered and can log in\",{cssClass:'alert-success',timeout:3000});\n        this.router.navigate(['/login']);\n      }\n      else{\n\n        this.flashMessage.show(data.msg,{cssClass:'alert-danger',timeout:3000});\n        this.router.navigate(['/register']);\n      }\n    });\n\n\n\n  }\n\n}\n","<form (submit)=\"onRegisterSubmit()\">\n    <fieldset>\n      <legend>Registration For Patient</legend>\n      <div class=\"form-group\">\n        <label for=\"exampleTextarea\">Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" placeholder=\"Enter Your Name\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"exampleTextarea\">Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" placeholder=\"Enter UserName\">\n        \n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\"class=\"form-control\" id=\"password\" placeholder=\"Password\">\n      </div>\n      \n     \n      \n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </fieldset>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from 'src/app/services/validate.service';\n\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport { AuthService } from 'src/app/services/auth.service';\n\nimport{Router} from '@angular/router';\n\n@Component({\n  selector: 'app-registerchemist',\n  templateUrl: './registerchemist.component.html',\n  styleUrls: ['./registerchemist.component.css']\n})\nexport class RegisterchemistComponent implements OnInit {\n  name:string;\n  username:string;\n  email:string;\n  password:string;\n\n  constructor(private ValidateService:ValidateService,\n    private flashMessage:FlashMessagesService,\n    private authService:AuthService,\n    private router:Router) { }\n\n  ngOnInit(): void {\n  }\n  onRegisterSubmit(){\n    const user={\n      name:this.name,\n      username:this.username,\n      email:this.email,\n      password:this.password\n    }\n\n\n    if(!this.ValidateService.validateRegister(user)){\n      this.flashMessage.show(\"Please Fill in All The Fields\",{cssClass:'alert-danger',timeout:3000});\n      return false;\n    }\n\n    if(!this.ValidateService.validateEmail(user.email)){\n      this.flashMessage.show(\"Please Use A Valid Email Address\",{cssClass:'alert-danger',timeout:3000});\n      return false;\n    } \n\n    //Register CHEMIST\n\n    this.authService.registerChemist(user).subscribe(data=>{\n      if(data.success){\n        this.flashMessage.show(\"You are now Registered and can log in\",{cssClass:'alert-success',timeout:3000});\n        this.router.navigate(['/loginchemist']);\n      }\n      else{\n\n        this.flashMessage.show(data.msg,{cssClass:'alert-danger',timeout:3000});\n        this.router.navigate(['/registerchemist']);\n      }\n    });\n\n\n\n  }\n\n}\n","<form (submit)=\"onRegisterSubmit()\">\n    <fieldset>\n      <legend>Registration For Chemist</legend>\n      <div class=\"form-group\">\n        <label for=\"exampleTextarea\">Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" placeholder=\"Enter Your Name\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"exampleTextarea\">Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" placeholder=\"Enter UserName\">\n        \n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\"class=\"form-control\" id=\"password\" placeholder=\"Password\">\n      </div>\n      \n     \n      \n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </fieldset>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from 'src/app/services/validate.service';\n\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport { AuthService } from 'src/app/services/auth.service';\n\nimport{Router} from '@angular/router';\n\n@Component({\n  selector: 'app-registerdoctor',\n  templateUrl: './registerdoctor.component.html',\n  styleUrls: ['./registerdoctor.component.css']\n})\nexport class RegisterdoctorComponent implements OnInit {\n  name:string;\n  username:string;\n  email:string;\n  password:string;\n\n  constructor(private ValidateService:ValidateService,\n    private flashMessage:FlashMessagesService,\n    private authService:AuthService,\n    private router:Router) { }\n\n  ngOnInit(): void {\n  }\n  onRegisterSubmit(){\n    const user={\n      name:this.name,\n      username:this.username,\n      email:this.email,\n      password:this.password\n    }\n\n\n    if(!this.ValidateService.validateRegister(user)){\n      this.flashMessage.show(\"Please Fill in All The Fields\",{cssClass:'alert-danger',timeout:3000});\n      return false;\n    }\n\n    if(!this.ValidateService.validateEmail(user.email)){\n      this.flashMessage.show(\"Please Use A Valid Email Address\",{cssClass:'alert-danger',timeout:3000});\n      return false;\n    } \n\n    //Register DOCTOR\n\n    this.authService.registerDoctor(user).subscribe(data=>{\n      if(data.success){\n        this.flashMessage.show(\"You are now Registered and can log in\",{cssClass:'alert-success',timeout:3000});\n        this.router.navigate(['/logindoctor']);\n      }\n      else{\n\n        this.flashMessage.show(data.msg,{cssClass:'alert-danger',timeout:3000});\n        this.router.navigate(['/registerdoctor']);\n      }\n    });\n\n\n\n  }\n\n}\n","<form (submit)=\"onRegisterSubmit()\">\n    <fieldset>\n      <legend>Registration For Doctor</legend>\n      <div class=\"form-group\">\n        <label for=\"exampleTextarea\">Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" placeholder=\"Enter Your Name\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"exampleTextarea\">Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" placeholder=\"Enter UserName\">\n        \n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\"class=\"form-control\" id=\"password\" placeholder=\"Password\">\n      </div>\n      \n     \n      \n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </fieldset>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport {TransferService} from '../../services/transfer.service';\n@Component({\n  selector: 'app-viewfull',\n  templateUrl: './viewfull.component.html',\n  styleUrls: ['./viewfull.component.css']\n})\nexport class ViewfullComponent implements OnInit {\n  data=this.transferService.getData();\n  constructor(private transferService:TransferService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>viewfull works!</p>\nUsername:{{data.username}}<br>\nMedicine:{{data.medname}}<br>\nbreakfast:{{data.breakfast}}<br>\nlunch:{{data.lunch}}<br>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport{Router} from '@angular/router';\nimport {TransferService} from '../../services/transfer.service'\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {Globals} from '../../services/glob';\n@Component({\n  selector: 'app-viewpreforpatient',\n  templateUrl: './viewpreforpatient.component.html',\n  styleUrls: ['./viewpreforpatient.component.css']\n \n})\nexport class ViewpreforpatientComponent implements OnInit {\n  uname:string=this.globals.uname;\n  prescription:Prescription[];\n  constructor(private authService:AuthService,\n    private router:Router,\n    private transferService:TransferService,private flashMessage:FlashMessagesService,\n    private globals: Globals) { }\n\n  ngOnInit(): void {\n    const obj={uname:this.uname}\n  \n    this.authService.viewPrescriptionpat(obj).subscribe(prescription=>{\n      if(prescription.success==false){\n        this.flashMessage.show(prescription.msg,{cssClass:'alert-danger',timeout:5000});\n        //this.router.navigate(['home']);\n        \n      }\n      else{\n        this.prescription=prescription;\n      }\n    });\n  }\n  \n\n  /*\n  Submit()\n  {\n    const obj={uname:this.uname}\n  \n    this.authService.viewPrescriptionpat(obj).subscribe(prescription=>{\n      if(prescription.success==false){\n        this.flashMessage.show(prescription.msg,{cssClass:'alert-danger',timeout:5000});\n        //this.router.navigate(['home']);\n        \n      }\n      else{\n        this.prescription=prescription;\n      }\n    });\n  }\n*/\ncheckout(i)\n{\n  this.transferService.setData(this.prescription[i]);\n\n  this.router.navigate(['viewfull']);\n}\n}\ninterface Prescription{\n  medname:string[],\n    breakfast:string[],\n    lunch:string[],\n    username:string\n    \n}","<p>viewpreforpatient works!</p>\nPATIENT USERNAME:{{uname}}\n\n<br>\n\n<div >\n    \n    <ul class=\"list-group\">\n        \n        <li class=\"list-group-item\" *ngFor=\"let pre of prescription; index as i\" >Medicines:{{pre.medname}}<br>Breakfast:{{pre.breakfast}}\n        \n            <button class=\"btn btn-default\"  type=\"button\" (click)=\"checkout(i)\">Select</button>\n        \n        </li>\n    </ul>   \n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport{Router} from '@angular/router';\nimport {TransferService} from '../../services/transfer.service'\nimport {FlashMessagesService} from 'angular2-flash-messages';\n@Component({\n  selector: 'app-viewprescription',\n  templateUrl: './viewprescription.component.html',\n  styleUrls: ['./viewprescription.component.css']\n})\nexport class ViewprescriptionComponent implements OnInit {\n\n  uname:string;\n  otp:string;\n  prescription:Prescription[];\n  constructor(private authService:AuthService,\n    private router:Router,\n    private transferService:TransferService,private flashMessage:FlashMessagesService) { }\n   \n  ngOnInit(): void {\n  //  this.authService.viewPrescription(this.uname).subscribe(prescription=>\n    //  this.prescription=prescription);\n      //console.log(this.prescription[1]);\n     \n     \n   \n  }\n  Submit()\n{\n  const obj={uname:this.uname,\n              otp:this.otp\n  }\n\n // this.authService.viewPrescription(obj).subscribe(prescription=>\n  //  this.prescription=prescription);\n    \n\n\n    this.authService.viewPrescription(obj).subscribe(prescription=>{\n      if(prescription.success==false){\n        this.flashMessage.show(prescription.msg,{cssClass:'alert-danger',timeout:5000});\n        //this.router.navigate(['home']);\n        \n      }\n      else{\n        this.prescription=prescription;\n      }\n    });\n      \n}\n  checkout(i){\n  //  console.log(this.prescription[i]);\n    this.transferService.setData(this.prescription[i]);\n\n    this.router.navigate(['checkoutprescription']);\n  }\n\n\n \n\n}\ninterface Prescription{\n  medname:string[],\n    breakfast:string[],\n    lunch:string[],\n    username:string\n    \n}","\nPATIENT USERNAME:\n<input type=\"text\" [(ngModel)]=\"uname\" name=\"uname\" id=\"uname\" placeholder=\"Enter Username\">\n<br>\n<br>\n<br>\nPATIENT OTP:  &nbsp;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \n    <input type=\"text\" [(ngModel)]=\"otp\" name=\"otp\" id=\"otp\" placeholder=\"Enter OTP\">\n<br><br>\n<button class=\"btn btn-default\" type=\"button\" (click)=\"Submit()\">Submit</button>\n<div >\n    \n    <ul class=\"list-group\">\n        \n        <li class=\"list-group-item\" *ngFor=\"let pre of prescription; index as i\" >USERNAME:{{pre.username}}<br><br>Medicines:{{pre.medname}}<br>Breakfast:{{pre.breakfast}}\n            <button class=\"btn btn-default\"  type=\"button\" (click)=\"checkout(i)\">Select</button>\n        \n        </li>\n    </ul>   \n</div>","import { Component, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Inject} from '@angular/core';\n\nimport {FormControl, Validators} from '@angular/forms';\nimport { EmpService } from 'src/app/services/emp.service';\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<AddComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Medicineprice,\n    public dataService: EmpService) { }\n\n  ngOnInit(): void {\n  }\n  formControl = new FormControl('', [\n    Validators.required\n    // Validators.email,\n  ]);\n\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' :\n      this.formControl.hasError('email') ? 'Not a valid email' :\n        '';\n  }\n\n  submit() {\n  // emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public confirmAdd(): void {\n    this.dataService.addIssue(this.data);\n  }\n\n}\n\n\ninterface Medicineprice{\n  medname:string,\n  price:number,\n  quantity:number,\n  id:string\n  \n  }\n","<div class=\"container\">\n    <h3 mat-dialog-title>Add New Medicine</h3>\n  \n    <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" #formControl=\"ngForm\">\n  \n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput #input class=\"form-control\" placeholder=\"Id\" [(ngModel)]=\"data.id\" name=\"id\" required >\n          <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n        </mat-form-field>\n      </div>\n  \n      <!--Textarea for demo purposes-->\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <textarea matInput #input class=\"form-control\" placeholder=\"Medicine Name\" [(ngModel)]=\"data.medname\" name=\"medname\" required ></textarea>\n          <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n        </mat-form-field>\n      </div>\n  \n      <!--Contains mat-hint for characters count and has maxLengt set-->\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput #inputstate class=\"form-control\" placeholder=\"Price\" [(ngModel)]=\"data.price\" name=\"state\" maxlength=\"10\" required >\n          <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n          <mat-hint align=\"end\">{{inputstate.value?.length || 0}}/10</mat-hint>\n        </mat-form-field>\n      </div>\n  \n       <!--Contains mat-hint for characters count and has maxLengt set-->\n       <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput #inputstate class=\"form-control\" placeholder=\"Quantity\" [(ngModel)]=\"data.quantity\" name=\"state\" maxlength=\"10\" required >\n          <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n          <mat-hint align=\"end\">{{inputstate.value?.length || 0}}/10</mat-hint>\n        </mat-form-field>\n      </div>\n  \n      <div mat-dialog-actions>\n        <button mat-button [type]=\"submit\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n        <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n      </div>\n    </form>\n  </div>","import { Component, OnInit ,Inject} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport{EmpService} from '../../services/emp.service';\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.css']\n})\nexport class DeleteComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public dataService: EmpService) { }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.dataService.deleteIssue(this.data);\n  }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Are you sure?</h3>\n    <div mat-dialog-content>\n      Id: {{data.id}}\n      <p></p>\n      Medicine Name: {{data.medname}}\n      <p></p>\n      Price: {{data.price}}\n     \n    </div>\n  \n    <div mat-dialog-actions>\n      <button mat-button [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">Delete</button>\n      <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n  </div>\n  <br>\n  © 2020 ITM App","import { Component,Inject } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {AuthService} from '../../services/auth.service';\nimport{EmpService} from '../../services/emp.service';\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent {\n\n  constructor(public empService:EmpService,\n    public authService:AuthService,\n    public dialogRef: MatDialogRef<EditComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n    formControl = new FormControl('', [\n      Validators.required\n      // Validators.email,\n    ]);\n\n    getErrorMessage() {\n      return this.formControl.hasError('required') ? 'Required field' :\n        this.formControl.hasError('email') ? 'Not a valid email' :\n          '';\n    }\n  \n    submit() {\n      // emppty stuff\n    }\n  \n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n  \n    stopEdit() {\n    \n      this.empService.updateIssue(this.data);\n\n\n\n      /*\n      this.authService.saveeditedmed(this.data).subscribe(data=>{\n        if(data.success){\n         \n        }\n        else{\n  \n    \n        }\n      });\n        */\n  \n  \n    }\n\n\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Issue id: {{data.id}}</h3>\n  \n    <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" #formControl=\"ngForm\">\n  \n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput #input class=\"form-control\" placeholder=\"Id\" [(ngModel)]=\"data.id\" name=\"id\" required >\n          <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n        </mat-form-field>\n      </div>\n  \n      \n  \n      <div class=\"form\">\n          <mat-form-field color=\"accent\">\n            <input matInput placeholder=\"Medicine Name\" [(ngModel)]=\"data.medname\" name=\"medname\">\n          </mat-form-field>\n      </div>\n  \n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput placeholder=\"Price\" [(ngModel)]=\"data.price\" name=\"price\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput placeholder=\"Quantity\" [(ngModel)]=\"data.quantity\" name=\"quantity\">\n        </mat-form-field>\n      </div>\n  \n  \n      <div mat-dialog-actions>\n        <button mat-button [type]=\"submit\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"stopEdit()\">Save</button>\n        <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n      </div>\n    </form>\n  </div>","import {Injectable} from '@angular/core';\r\nimport {Router,CanActivate} from '@angular/router';\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(private authService:AuthService,\r\n        private router:Router){\r\n\r\n    }\r\n\r\n    canActivate(){\r\n        if(this.authService.loggedIn()){\r\n            return true;\r\n        }\r\n        else{\r\n            this.router.navigate(['/']);\r\n            return false;\r\n        }\r\n    }\r\n\r\n   \r\n}","import {Injectable} from '@angular/core';\r\nimport {Router,CanActivate} from '@angular/router';\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuardChemist implements CanActivate{\r\n    constructor(private authService:AuthService,\r\n        private router:Router){\r\n\r\n    }\r\n\r\n    canActivate(){\r\n        if(this.authService.loggedInChemist()){\r\n            return true;\r\n        }\r\n        else{\r\n            this.router.navigate(['/']);\r\n            return false;\r\n        }\r\n    }\r\n\r\n   \r\n}","import {Injectable} from '@angular/core';\nimport {Router,CanActivate} from '@angular/router';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuardDoctor implements CanActivate{\n    constructor(private authService:AuthService,\n        private router:Router){\n\n    }\n\n    canActivate(){\n        if(this.authService.loggedInDoctor()){\n            return true;\n        }\n        else{\n            this.router.navigate(['/']);\n            return false;\n        }\n    }\n\n   \n}","import { Injectable } from '@angular/core';\nimport {Http,Headers,RequestOptions} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {tokenNotExpired} from 'angular2-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class AuthService {\n\n  authToken:any;\n  user:any;\n\n\n  options;\n  constructor(private http:Http) { }\n\n  registerUser(user){\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/register',user,{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n\n  }\n  //reg for doc\n  registerDoctor(user){\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/registerdoctor',user,{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n\n  }\n  //reg for chemist\n  registerChemist(user){\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/registerchemist',user,{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n\n  }\n\n  authenticateUser(user){\n\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/authenticate',user,{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n\n  }\n\n\n  //auth for doc\n  authenticateDoctor(user){  \n\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/authenticatedoctor',user,{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n\n  }\n\n  //auth for chemist\n  //auth for doc\n  authenticateChemist(user){  \n\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/authenticatechemist',user,{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n\n  }\n\n\n  getProfile(){\n    let headers=new Headers();\n    this.loadToken();\n    headers.append('Authorization',this.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get('/api/users/profile',{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n  }\n\n  getProfileChemist(){\n    let headers=new Headers();\n    this.loadTokenChemist();\n    headers.append('Authorization',this.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get('/api/users/profile',{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n  }\n\n  getProfileDoctor(){\n   \n    let headers=new Headers();\n    this.loadTokenDoctor();\n    headers.append('Authorization',this.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get('/api/users/profile',{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n   \n  }\n\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token',token);\n    localStorage.setItem('user',JSON.stringify(user));\n    this.authToken=token;\n    this.user=user;\n\n  }\n\n  //store login details of chemist in local storage\n\n  storeChemistData(token, user) {\n    localStorage.setItem('id_tokenchemist',token);\n    localStorage.setItem('user',JSON.stringify(user));\n    this.authToken=token;\n    this.user=user;\n\n  }\n  //store login details of doctor in local storage\n\n  storeDoctorData(token, user) {\n    localStorage.setItem('id_tokendoctor',token);\n    localStorage.setItem('user',JSON.stringify(user));\n    this.authToken=token;\n    this.user=user;\n\n  }\n\n  loadToken(){\n    const token=localStorage.getItem('id_token');\n    this.authToken=token;\n  }\n\n  //load chemist token\n  loadTokenChemist(){\n    const token=localStorage.getItem('id_tokenchemist');\n    this.authToken=token;\n  }\n\n  //load doctor token\n  loadTokenDoctor(){\n    const token=localStorage.getItem('id_tokendoctor');\n    this.authToken=token;\n  }\n\n \n\n  //for authentication guard\n  //to check if we are logged so that /login,/register can be disabled\n  loggedIn(){\n    return tokenNotExpired('id_token');\n  }\n\n  //log in status for chemist\n  loggedInChemist(){\n    return tokenNotExpired('id_tokenchemist');\n  }\n\n  //log in status for doctor\n  //log in status for chemist\n  loggedInDoctor(){\n    return tokenNotExpired('id_tokendoctor');\n  }\n\n\n  logout(){\n    this.authToken=null;\n    this.user=null;\n    localStorage.clear();\n  }\n\n\n\n  //function for adding prescirption to database\n  addPrescription(prescirption){\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/addprescription',prescirption,{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n  }\n\n  viewPrescription(obj){         \n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/viewprescription',obj,{headers:headers})\n    .map(res=>res.json());\n    \n  }\n\n  //for patient presciprtin viewing\n  viewPrescriptionpat(obj){         \n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/viewprescriptionpat',obj,{headers:headers})\n    .map(res=>res.json());\n    \n  }\n\n  /*\n  viewPrescription(){         //backup \n    \n    return this.http.get('/api/users/viewprescription')\n    .map(res=>res.json());\n    \n  }\n  */\n\n  viewMedicinePrice(medname){\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/viewprice',medname,{headers:headers})\n    .map(res=>res.json());\n  }\n\n  //to store drug in database\n  registerDrug(drug){\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/registerdrug',drug,{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n\n  }\n\n  viewDrugs(){\n    return this.http.get('/api/users/viewdrugs')\n    .map(res=>res.json());\n    \n  }\n\n  //to register disease in database\n  registerDisease(disease){\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/registerdisease',disease,{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n\n  }\n\n  viewDiseases(){\n    \n    return this.http.get('/api/users/viewdiseases')\n    .map(res=>res.json());\n    \n  }\n\n  viewAllMedicinePrice(){\n  \n    return this.http.get('/api/users/viewallprice')\n    .map(res=>res.json());\n  }\n\n  saveeditedmed(medobj){\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/editmed',medobj,{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n  }\n\n  //below is for dispalying too\n  saveeditedmed2(medobj){\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/editmed2',medobj,{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n  }\n\n  // Function to get public profile data\n  getPublicProfile(username) {\n    this.createAuthenticationHeaders(); // Create headers before sending to /api\n    return this.http.get('/api/users/publicProfile/' + username, this.options).map(res => res.json());\n  }\n\n   // Function to create headers, add token, to be used in HTTP requests\n   createAuthenticationHeaders() {\n    this.loadToken(); // Get token so it can be attached to headers\n    // Headers configuration options\n    this.options = new RequestOptions({\n      headers: new Headers({\n        'Content-Type': 'application/json', // Format set to JSON\n        'authorization': this.authToken // Attach token\n      })\n    });\n  }\n\n  getProfileDoctorbyname(username){\n    this.createAuthenticationHeaders(); // Create headers before sending to /api\n    return this.http.get('/api/users/publicProfile1/' + username, this.options).map(res => res.json());\n  }\n\n  getDoctormed(did){\n   \n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/getdoctormed',did,{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n  }\n\n\n  getDoctordisname(){\n    return this.http.get('/api/users/getdoctordis')\n    .map(res=>res.json());\n    \n  }\n\n  getDoctordisid(){\n    return this.http.get('/api/users/getdoctordisid')\n    .map(res=>res.json());\n    \n  }\n\n  addPrescription2(prescirption){\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/addprescription2',prescirption,{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n  }\n\n  getDoctordAllmed(){\n    \n    return this.http.get('/api/users/getdoctorallmed')\n    .map(res=>res.json());\n    \n  }\n\n  updatequant(medobj){\n    let headers=new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post('/api/users/updquant',medobj,{headers:headers})\n    .map(res=>res.json()); //observable so we use .map\n  }\n\n  getgraph()\n  {\n    return this.http.get('/api/users/graph')\n    .map(res=>res.json());\n  }\n  getgraph2()\n  {\n    return this.http.get('/api/users/graph2')\n    .map(res=>res.json());\n  }\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport { Http, Headers, RequestOptions } from '@angular/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogserviceService {\n  options;\n  domain = '/api';\n\n  constructor(private authService: AuthService,\n    private http: Http) { }\n\n\n    createAuthenticationHeaders() {\n      this.authService.loadTokenDoctor(); // Get token so it can be attached to headers\n      // Headers configuration options\n      this.options = new RequestOptions({\n        headers: new Headers({\n          'Content-Type': 'application/json', // Format set to JSON\n          'Authorization': this.authService.authToken // Attach token\n        })\n      });\n    }\n    // Function to create a new blog post\n    newBlog(blog) {\n    this.createAuthenticationHeaders(); // Create headers\n    return this.http.post('/api/users/newBlog', blog, this.options).map(res => res.json());\n  }\n\n  // Function to get all blogs from the database\n  getAllBlogs() {\n    this.createAuthenticationHeaders(); // Create headers\n    return this.http.get('/api/users/allBlogs', this.options).map(res => res.json());\n  }\n\n  // Function to get the blog using the id\n  getSingleBlog(id) {\n    this.createAuthenticationHeaders(); // Create headers\n    return this.http.get('/api/users/singleBlog/'+ id, this.options).map(res => res.json());\n  }\n\n  // Function to edit/update blog post\n  editBlog(blog) {\n    this.createAuthenticationHeaders(); // Create headers\n    return this.http.put('/api/users/updateBlog/', blog, this.options).map(res => res.json());\n  }\n\n   // Function to delete a blog\n   deleteBlog(id) {\n    this.createAuthenticationHeaders(); // Create headers\n    return this.http.delete('/api/users/deleteBlog/'+ id, this.options).map(res => res.json());\n  }\n\n\n  // Function to like a blog post\n  likeBlog(id) {\n    //const blogData = { id: id,uname:\"doc2\"};\n    \n    return this.http.put('/api/users/likeBlog/', id, this.options).map(res => res.json());\n  }\n\n  // Function to dislike a blog post\n  dislikeBlog(id) {\n    //const blogData = { id: id };\n    return this.http.put('/api/users/dislikeBlog/', id, this.options).map(res => res.json());\n  }\n\n  // Function to post a comment on a blog post\n  postComment(data) {\n    \n    this.createAuthenticationHeaders(); // Create headers\n \n    return this.http.post('/api/users/comment/', data, this.options).map(res => res.json());\n\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {BehaviorSubject} from 'rxjs'; \nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport { ToastrService } from 'ngx-toastr';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpService {\n  dataChange: BehaviorSubject<Medicineprice[]> = new BehaviorSubject<Medicineprice[]>([]);\n  dialogData: any;\n  //;\n  constructor(private http: HttpClient,\n    private toastr: ToastrService) { }\n\n  \n  getAllIssues():void {  \n    this.http.get<Medicineprice[]>('/api/users/viewallprice').subscribe(data=>{\n      this.dataChange.next(data);\n    },\n    (error: HttpErrorResponse) => {\n      console.log (error.name + ' ' + error.message);\n      });\n    }\n\n    get data(): Medicineprice[] {\n      return this.dataChange.value;\n    }\n  \n    getDialogData() {\n      return this.dialogData;\n    }\n    addIssue (issue: Medicineprice): void {\n      this.http.post('/api/users/adddrug2',issue).subscribe(data => {\n        this.dialogData = data;});\n        this.toastr.success('Successfully Added');\n    }\n  \n    updateIssue (issue: Medicineprice): void {\n      this.http.post('/api/users/editmed2',issue).subscribe(data => {\n        this.dialogData = data;\n       // this.flashMessage.show('Successfully edited', 3000);\n        this.toastr.success('Successfully added');\n      },\n      (err: HttpErrorResponse) => {\n        //this.flashMessage.show('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n    }\n  \n    deleteIssue (issue: Medicineprice): void {\n    // console.log(id);\n      this.http.post('/api/users/deldrug2',issue).subscribe(data => {\n        this.toastr.warning('Successfully deleted');\n      \n      });\n\n    }\n\n\n}\n\ninterface Medicineprice{\n  medname:string,\n  price:number,\n  quantity:number,\n  id:string\n  \n  }\n  interface Meddel\n  {\n    id:number\n  }\n\n","import { Injectable } from '@angular/core';\n\nInjectable()\nexport class Globals{\n    uname:string;\n\n    set(obj){\n        this.uname=obj;\n    }\n\n    get(){\n        return this.uname;\n    }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransferService {\n\n  constructor() { }\n\n\n  private data;\n\n  setData(data){\n    this.data = data;\n  }\n\n  getData(){\n    let temp = this.data;\n    this.clearData();\n    return temp;\n  }\n\n  clearData(){\n    this.data = undefined;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n    validateRegister(user){\n      if(user.name==undefined || user.username==undefined || user.email==undefined || user.password==undefined){\n        return false;\n      }\n      else{\n        return true;\n      }\n    }\n\n      validateEmail(email){\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n          \n      \n      }\n\n\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}